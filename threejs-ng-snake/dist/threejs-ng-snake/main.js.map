{"version":3,"sources":["./src/app/classes/laser-ray.ts","./src/app/services/font-builder.service.ts","./src/environments/environment.ts","./src/app/classes/random-shape-class.model.ts","./src/app/services/post-game-helper.service.ts","./src/app/services/scoreboard-helper.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/js/TurretControls.js","./src/app/app.module.ts","./src/app/word-api.service.ts","./src/app/canvas-comp/canvas-comp.component.ts","./src/app/canvas-comp/canvas-comp.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/services/scene-helper.service.ts","./src/app/js/stats.js","./src/app/app-routing.module.ts","./src/app/environments/environment.ts","./src/app/services/obj-builder.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import * as THREE from 'three';\r\n// import BufferGeometryUtils from '../js/BufferGeometryUtils'\r\n// import * as BFUTILS from '../js/BufferGeometryUtils'\r\n\r\n\r\nexport class LaserRay {\r\n//     private texture_uri: any = \".\\\\assets\\\\crazier_greens.png\"\r\n    private texture_uri: any = \".\\\\assets\\\\crazier_greens_2.png\"\r\n    // todo new logic: recharge time milliseconds\r\n    private static rechargeTime: number = 300\r\n    private static charged: boolean = true\r\n    private static lastShot: number = -1\r\n\r\n    public texture: any;\r\n    public laserMat: any;\r\n    public laserGeo: any;\r\n    public laserSprite: any;\r\n    public laserSpriteCombined: any;\r\n    public name: any;\r\n\r\n    public upHelper: any;\r\n\r\n    constructor(camera: any, targetAxes: any){\r\n        const topRadius = .004;\r\n        const bottomRadius = .0005;\r\n        const height = .2;\r\n        const segments = 20;\r\n        this.texture = new THREE.TextureLoader().load(this.texture_uri)\r\n//         this.laserMat = new THREE.SpriteMaterial({\r\n        this.laserMat = new THREE.MeshBasicMaterial({\r\n            map: this.texture,\r\n//             blending: THREE.AdditiveBlending,\r\n            side: THREE.DoubleSide,\r\n            transparent: true,\r\n            opacity: .75\r\n        })\r\n        this.laserGeo = new THREE.CylinderGeometry(topRadius, bottomRadius, height, segments)\r\n        // move center down?\r\n        this.laserGeo.applyMatrix4(new THREE.Matrix4().makeTranslation(0, -height/2, 0))\r\n        // rotate 90deg x axis\r\n        this.laserGeo.applyMatrix4(new THREE.Matrix4().makeRotationX(THREE.MathUtils.degToRad(90)))\r\n\r\n        this.laserSprite = new THREE.Mesh(this.laserGeo, this.laserMat)\r\n        this.laserGeo.dispose()\r\n        this.laserMat.dispose()\r\n\r\n//         this.laserSprite.position.set(0, 1.2, 7.5)\r\n        this.laserSprite.position.copy(camera.position)\r\n        // this should move out of camera view?\r\n        this.laserSprite.z -= 1\r\n        // todo new logic user data target axes\r\n        this.laserSprite.userData.targetAxes = targetAxes\r\n\r\n        // todo : new logic use arrow function versus static function\r\n        this.laserSprite.userData.updateLaserPosition = () => {\r\n            this.laserSprite.position.add(this.laserSprite.userData.targetAxes.setLength(.08))\r\n        }\r\n\r\n        this.laserSprite.userData.getLaserTravelDistance = (camera: any) => {\r\n            return this.laserSprite.position.distanceTo(camera.position)\r\n        }\r\n\r\n        this.laserSprite.userData.deleteLaser = () => {\r\n            // @ts-ignore\r\n            this.laserSprite.geometry.dispose()\r\n            // @ts-ignore\r\n            this.laserSprite.material.dispose()\r\n            this.laserSprite.removeFromParent()\r\n        }\r\n\r\n\r\n        // todo must uncomment for helpers\r\n//         this.upHelper = new THREE.ArrowHelper(this.laserSprite.up, new THREE.Vector3(0,0,0), 1, new THREE.Color('rgb(0, 200, 200)'))\r\n//         this.upHelper.name = \"laserUpHelper\"\r\n\r\n//         let temp_vec = new THREE.Vector3().copy(this.laserSprite.position)\r\n//         temp_vec.sub(camera.position)\r\n//         this.laserSprite.rotateX(temp_vec.angleTo(new THREE.Vector3(1,0,0)))\r\n//         console.log(temp_vec.angleTo(new THREE.Vector3(1,0,0)))\r\n//         this.laserSprite.rotateX(3)\r\n\r\n\r\n//         this.laserSprite.rotateX(5)\r\n\r\n    }\r\n\r\n    static checkIfCharged() : any{\r\n//         console.log(this.rechargeTime)\r\n//         console.log(typeof new Date().valueOf())\r\n        if(this.charged == true){\r\n            return true\r\n        }else if((new Date().valueOf() - this.lastShot) >= this.rechargeTime){\r\n            this.charged = true;\r\n        }\r\n\r\n        return this.charged\r\n\r\n    }\r\n\r\n    static setDepleted() :any {\r\n        this.charged = false\r\n        this.lastShot = new Date().valueOf()\r\n    }\r\n\r\n//     static updateLaserPosition(laserSprite:any){\r\n//         laserSprite.position.add(laserSprite.userData.targetAxes.setLength(.08))\r\n//     }\r\n//     todo : deprecated\r\n//     static updateLaserSprite(camera:any, laserSprite:any, controlsTarget:any) {\r\n//         laserSprite.position.copy(camera.position)\r\n//         let target_axis = new THREE.Vector3().copy(controlsTarget).sub(camera.position).normalize()\r\n//\r\n//     }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as THREE from 'three';\r\nimport { FontLoader } from 'three/src/loaders/FontLoader';\r\nimport { environment } from '../environments/environment'\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FontBuilderService {\r\n    public loader: FontLoader;\r\n    constructor() {\r\n        this.loader = new FontLoader();\r\n    }\r\n\r\n    public addFont(msg: string, scene:THREE.Scene, sceneGroupName: string, positionScale: THREE.Vector3, size:number) : void {\r\n        this.loader.load(environment.fontUri, font => {\r\n            const fontColor = new THREE.Color('rgb(0, 200, 200)');\r\n            const matLite = new THREE.MeshBasicMaterial({\r\n                color: fontColor,\r\n                transparent: true,\r\n                opacity: .5,\r\n                side: THREE.DoubleSide,\r\n                wireframe: true\r\n            });\r\n            const message = msg\r\n            const shape = font.generateShapes(message, size);\r\n            const textGeo = new THREE.ShapeGeometry(shape);\r\n            const text = new THREE.Mesh(textGeo, matLite);\r\n            text.position.set(positionScale.x, positionScale.y, positionScale.z)\r\n            text.userData.fontColor = fontColor\r\n\r\n            let matBox = new THREE.MeshBasicMaterial().copy(matLite)\r\n            let boxHelper = new THREE.Box3().setFromObject(text)\r\n            text.userData.boxHelper = boxHelper\r\n            let boxWidth = (boxHelper.max.x-boxHelper.min.x)\r\n            // todo new logic avoid overly small sizes like with letter I\r\n            if(boxWidth < size/3){\r\n                boxWidth += size/2\r\n            }\r\n\r\n            const boxHeight = boxHelper.max.y-boxHelper.min.y\r\n            const boxDepth = boxHelper.max.z-boxHelper.min.z\r\n            let boxGeo = new THREE.BoxGeometry(\r\n                boxWidth,\r\n                boxHeight,\r\n                boxDepth\r\n            )\r\n            matBox.color.b+=.5\r\n            matBox.color.g-=.5\r\n            matBox.transparent = true\r\n            matBox.opacity = .3\r\n            let boxMesh = new THREE.Mesh(boxGeo, matBox)\r\n            boxGeo.scale(1.5, 1.4, 1)\r\n            // todo slight tweaks to line up better\r\n            boxMesh.position.x = (positionScale.x + boxWidth/2)\r\n            boxMesh.position.y = (positionScale.y + boxHeight/2)\r\n            boxMesh.position.z = (positionScale.z + boxDepth/2)\r\n            let tempVec = new THREE.Vector3()\r\n            boxHelper.getCenter(tempVec)\r\n            boxMesh.translateOnAxis(tempVec.add(environment.cameraPos.multiplyScalar(-1)).normalize(), -size/2)\r\n\r\n            // todo new logic move this into userdata\r\n            text.userData.boxMesh = boxMesh\r\n            matBox.dispose()\r\n            boxGeo.dispose()\r\n\r\n            // todo new logic dispose like with laser ray\r\n            textGeo.dispose()\r\n            matLite.dispose()\r\n\r\n            // new logic store msg in userdata\r\n            text.userData.message = message\r\n\r\n            let boxHelperMesh = new THREE.Box3().setFromObject(boxMesh)\r\n            // todo new logic userdata set boxhelper from mesh not text\r\n            text.userData.boxHelper = boxHelperMesh\r\n            // todo new logic set z plane from boxhelper set from text not mesh\r\n            text.userData.textZPlane = text.userData.boxHelper.min.z\r\n\r\n            // new logic - userdata function\r\n            text.userData.deleteText = () => {\r\n                text.userData.boxHelper = null\r\n                // delete box\r\n                text.userData.boxMesh.geometry.dispose()\r\n                text.userData.boxMesh.material.dispose()\r\n                text.userData.boxMesh.removeFromParent()\r\n\r\n                text.geometry.dispose()\r\n                text.material.dispose()\r\n                text.removeFromParent()\r\n            }\r\n\r\n            // new logic - laser collision\r\n            text.userData.checkPointConflict = (point:THREE.Vector3) => {\r\n                if((point.z <= text.userData.textZPlane && point.z >= text.userData.textZPlane*.99) &&\r\n                   (text.userData.boxHelper.min.x <= point.x && text.userData.boxHelper.max.x >= point.x) &&\r\n                   (text.userData.boxHelper.min.y <= point.y && text.userData.boxHelper.max.y >= point.y)\r\n                   ){\r\n                    text.material.wireframe = false\r\n                    text.userData.boxMesh.material.wireframe = false\r\n                    return true\r\n                }\r\n                return false\r\n            }\r\n            // todo new logic refresh wireFrame\r\n            text.userData.refreshTextWireframe = () => {\r\n                text.material.wireframe = true\r\n                text.userData.boxMesh.material.wireframe = true\r\n            }\r\n\r\n            let wordGroup = scene.getObjectByName(sceneGroupName)\r\n            if(wordGroup != undefined){\r\n                wordGroup.add(text)\r\n                wordGroup.add(boxMesh)\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import * as THREE from 'three';\r\nimport { environment } from '../environments/environment'\r\n\r\n// https://www.typescriptlang.org/docs/handbook/interfaces.html\r\n// https://www.cloudhadoop.com/angular-model-class-interface/\r\nexport class RandomShapeClass {\r\n    private material: THREE.MeshPhongMaterial;\r\n    private radius: number;\r\n    public position: number[];\r\n    public worldRadius: number;\r\n\r\n    public direction: THREE.Vector3;\r\n    public thetaNow: number;\r\n    public thetaDif: number;\r\n\r\n    public directionHelper: any;\r\n\r\n    public rotationHelper: any;\r\n\r\n    public geometry: THREE.BufferGeometry;\r\n    private maxPoints: number;\r\n    public shapeObj: THREE.Mesh;\r\n    public boxHelper: any;\r\n    public boxGeo: any;\r\n    public conflictHit: boolean;\r\n    // helper for displaying direction or no\r\n    public directionBool: boolean;\r\n\r\n    // todo : pushDir, potential to add to userData\r\n    public pushDir = new THREE.Vector3(0,0,0)\r\n\r\n    // static members\r\n    static blueColor: THREE.Color = new THREE.Color('rgb(0,120,255)')\r\n    static redColor: THREE.Color = new THREE.Color('rgb(255,120,0)')\r\n    static minScore = 1\r\n    static maxScore = 20000\r\n    // todo new logic base score to have as minimum\r\n    static baseScore = Math.sqrt(RandomShapeClass.maxScore)/2\r\n\r\n\r\n    // todo here take box colors bool as param\r\n    constructor(material: THREE.MeshPhongMaterial,\r\n                radius: number, position: number[],\r\n                maxPoints: number, boxHelpersBool: boolean){\r\n            // todo : material passed into constructor; ideal?\r\n            this.material = material;\r\n            // todo : material and radius : two fields to add userdata\r\n            this.radius = radius;\r\n\r\n            this.position = position;\r\n            this.maxPoints = maxPoints\r\n            this.geometry = this.makeRandomGeometry(maxPoints, radius)\r\n\r\n            // todo necessary for vertices const here? also could have helper\r\n            // to translate given simple pos input\r\n            let posVec = new THREE.Vector3(this.position[0], this.position[1], this.position[2])\r\n            let posLength = posVec.length();\r\n\r\n            // todo shapeObj : where to add userdata\r\n            this.shapeObj = new THREE.Mesh(this.geometry, this.material);\r\n            //todo new logic dispose of this\r\n            this.geometry.dispose()\r\n            this.material.dispose()\r\n\r\n            // todo new logic score\r\n//             this.shapeObj.userData.points = RandomShapeClass.maxScore - THREE.MathUtils.mapLinear(this.radius, environment.min_asteroid_radius, environment.max_asteroid_radius, RandomShapeClass.minScore, RandomShapeClass.maxScore)\r\n            // todo new logic use base score + inverse sqrt function\r\n            this.shapeObj.userData.points = RandomShapeClass.baseScore + 2*(Math.sqrt(RandomShapeClass.maxScore) + -(Math.sqrt(THREE.MathUtils.mapLinear(this.radius, environment.min_asteroid_radius, environment.max_asteroid_radius, RandomShapeClass.minScore, RandomShapeClass.maxScore)+1)))\r\n            // todo new logic asteroid spin\r\n            this.shapeObj.userData.spin = (environment.max_asteroid_spin*1.1) - THREE.MathUtils.mapLinear(this.radius, environment.min_asteroid_radius, environment.max_asteroid_radius, environment.min_asteroid_spin, environment.max_asteroid_spin)\r\n//             this.shapeObj.userData.points = THREE.MathUtils.mapLinear(this.radius, environment.min_asteroid_radius, environment.max_asteroid_radius, RandomShapeClass.minScore, RandomShapeClass.maxScore)\r\n\r\n//             this.geometry.translate(vertices[0], vertices[1], vertices[2])\r\n            // todo should be no reason translate in constructor\r\n            this.shapeObj.translateOnAxis(posVec.normalize(), posLength)\r\n\r\n            this.shapeObj.castShadow = true;\r\n            this.shapeObj.receiveShadow = true;\r\n\r\n            this.worldRadius = 0;\r\n            this.direction = new THREE.Vector3()\r\n            this.thetaNow = 0;\r\n            this.thetaDif = 0;\r\n\r\n            this.initDirectionTheta()\r\n\r\n            // boolean flag display direction helper or no ( DEPRECATED )\r\n            this.directionBool = false;\r\n\r\n\r\n            // conflictHit: used to determine box color, red or green\r\n            this.conflictHit = false;\r\n\r\n            // make a box helper, passing in false boolean because no initial conflict\r\n            this.shapeObj.userData.boxHelpers = boxHelpersBool\r\n            if(boxHelpersBool){\r\n                this.boxHelper = this.makeBoxHelper(false)\r\n            }else{\r\n                this.boxHelper = undefined\r\n            }\r\n            // also make box geometry used for conflict checking\r\n            this.boxGeo = this.makeBoxGeo();\r\n\r\n\r\n    }\r\n\r\n    initDirectionTheta() {\r\n        let shapeObjXZ = new THREE.Vector3().copy(this.shapeObj.position)\r\n        // project vector shape position on plane; used to find rotation angle around y axis\r\n        shapeObjXZ.projectOnPlane(new THREE.Vector3(0, 1, 0))\r\n        // worldRadius : length of vector projected\r\n        // todo worldRadius : potential userdata field\r\n        this.worldRadius = shapeObjXZ.length()\r\n\r\n        this.direction = new THREE.Vector3()\r\n\r\n        // theta now : angle from projected position vector to x axis\r\n        // todo theta now : potential add to userdata\r\n        this.thetaNow = shapeObjXZ.angleTo(new THREE.Vector3(1, 0, 0));\r\n        // angle To: finds shortest\r\n        if(shapeObjXZ.z < 0 ){\r\n            this.thetaNow *= -1;\r\n        }\r\n\r\n        // theta dif:\r\n        this.thetaDif = -.0001/this.radius + -.001\r\n    }\r\n\r\n    getDirection() : THREE.Vector3 {\r\n        return this.direction\r\n    }\r\n\r\n//     updateDirectionTheta(){\r\n//         let shapeObjXZ = new THREE.Vector3().copy(this.shapeObj.position)\r\n//         shapeObjXZ.projectOnPlane(new THREE.Vector3(0, 1, 0))\r\n//         this.worldRadius = shapeObjXZ.length()\r\n//         this.thetaNow = shapeObjXZ.angleTo(new THREE.Vector3(1, 0, 0));\r\n//         // angle To: finds shortest\r\n//         if(shapeObjXZ.z < 0 ){\r\n//             this.thetaNow *= -1;\r\n//         }\r\n//     }\r\n\r\n\r\n    // https://sites.math.washington.edu/~king/coursedir/m445w04/notes/vector/coord.html\r\n    makeCircle(index:number, maxPoints:number, radius:number, yIndex:number) : number[] {\r\n        // 0 <= index < maxPoints - 1\r\n        const pointsNum: number = maxPoints - index;\r\n        // coneMultiplier:set to 1 and sphereMultiplier to 0 for cone\r\n        const coneMultiplier = .5;\r\n        // coneRadius: equation to trace out edges cone\r\n        const coneRadius: number = radius * (pointsNum/maxPoints);\r\n        // sphereMultiplier:set to 1 and coneMultiplier to 0 for orb\r\n        const sphereMultiplier = 1.0-coneMultiplier;\r\n        const sphereRadius: number = Math.sqrt(Math.pow(radius, 2) - Math.pow(yIndex, 2));\r\n        let circleRadius = ((coneRadius*coneMultiplier)+(sphereRadius*sphereMultiplier))\r\n        //uncomment for hourglass\r\n//         const circleRadius: number = radius - Math.sqrt(Math.pow(radius, 2) - Math.pow(yIndex, 2))\r\n        let circlePointsMat: Array<any> = []\r\n        let last: number = 0.0\r\n        let thetaDiff: number = 360.0/pointsNum\r\n        for (let i = 0; i < pointsNum; i++) {\r\n            // random value between last generated angle and theta increment\r\n            let theta:number = last + (Math.random() * (thetaDiff))\r\n            if(i == 0){\r\n                theta = 0;\r\n            }else if(i == pointsNum-1){\r\n                theta = 360;\r\n            }\r\n            last += thetaDiff\r\n//             let iX:number = Math.cos(this.thetaToRad(theta)) * circleRadius;\r\n            let iX:number = Math.cos(THREE.MathUtils.degToRad(theta)) * circleRadius\r\n//             let iZ:number = Math.sin(this.thetaToRad(theta)) * circleRadius;\r\n            let iZ:number = Math.sin(THREE.MathUtils.degToRad(theta)) * circleRadius\r\n            circlePointsMat.push([iX, yIndex, iZ])\r\n\r\n        }\r\n        return circlePointsMat;\r\n    }\r\n\r\n    makeCirclesArrays(maxPoints: number, radius:number, bottomFlag:boolean) : Array<any> {\r\n        let numCircles = maxPoints - 1;\r\n        // smaller number, taller asteroid, vice versa\r\n//         let heightSquisher : number = 1\r\n//         let yStep = radius / (heightSquisher*numCircles);\r\n        let yStep = radius / numCircles\r\n        let yIndex = 0;\r\n        if(bottomFlag == true){\r\n            yStep *= -1;\r\n        }\r\n        let circles = new Array(numCircles)\r\n        for (let i = 0; i < numCircles; i++) {\r\n            let currCircle = this.makeCircle(i, maxPoints, radius, yIndex)\r\n            circles[i] = currCircle\r\n            yIndex += yStep;\r\n\r\n        }\r\n        return circles;\r\n\r\n    }\r\n\r\n\r\n    pushTwoCircles(circleOne: Array<any>, circleTwo: Array<any>, bufferArr: number[]) : number[] {\r\n        let indxOne = 0;\r\n        let indxTwo = 0;\r\n        let indxBool = true;\r\n        const numPoints = circleOne.length;\r\n        while(indxOne < numPoints-1){\r\n            if(indxBool){\r\n                bufferArr = bufferArr.concat(circleOne[indxOne]);\r\n                bufferArr = bufferArr.concat(circleTwo[indxTwo]);\r\n                indxOne++;\r\n                bufferArr = bufferArr.concat(circleOne[indxOne]);\r\n            }else{\r\n                indxTwo++;\r\n                bufferArr = bufferArr.concat(circleTwo[indxTwo]);\r\n                bufferArr = bufferArr.concat(circleOne[indxOne]);\r\n                bufferArr = bufferArr.concat(circleTwo[indxTwo-1]);\r\n            }\r\n            indxBool = !indxBool\r\n        }\r\n        bufferArr.concat(circleTwo[circleTwo.length-1])\r\n        bufferArr.concat(circleOne[circleOne.length-1])\r\n        bufferArr.concat(circleTwo[0])\r\n\r\n        bufferArr.concat(circleOne[circleOne.length-1])\r\n        bufferArr.concat(circleTwo[0])\r\n        bufferArr.concat(circleOne[0])\r\n\r\n        return bufferArr\r\n    }\r\n\r\n    pushBottomCircles(circleOne: Array<any>, circleTwo: Array<any>, bufferArr: number[]) : number[] {\r\n        let indxOne = 0;\r\n        let indxTwo = 0;\r\n        let indxBool = true;\r\n        const numPoints = circleOne.length;\r\n        // could shorten logic by breaking this part into separate function for both and merging\r\n        while(indxOne < numPoints-1){\r\n            if(indxBool){\r\n                indxOne++;\r\n                bufferArr = bufferArr.concat(circleOne[indxOne]);\r\n                bufferArr = bufferArr.concat(circleTwo[indxTwo]);\r\n                bufferArr = bufferArr.concat(circleOne[indxOne-1]);\r\n            }else{\r\n                bufferArr = bufferArr.concat(circleTwo[indxTwo]);\r\n                bufferArr = bufferArr.concat(circleOne[indxOne]);\r\n                indxTwo++;\r\n                bufferArr = bufferArr.concat(circleTwo[indxTwo]);\r\n            }\r\n            indxBool = !indxBool\r\n        }\r\n        bufferArr.concat(circleTwo[circleTwo.length-1])\r\n        bufferArr.concat(circleOne[circleOne.length-1])\r\n        bufferArr.concat(circleTwo[0])\r\n\r\n        bufferArr.concat(circleOne[circleOne.length-1])\r\n        bufferArr.concat(circleTwo[0])\r\n        bufferArr.concat(circleOne[0])\r\n\r\n        return bufferArr\r\n    }\r\n\r\n    makeRandomGeometry(maxPoints: number, radius: number) : THREE.BufferGeometry {\r\n        radius/=1.2\r\n        let circlesPointsArr = this.makeCirclesArrays(maxPoints, radius, false);\r\n        let currObjArr:number[] = []\r\n        for(let i = 0; i < circlesPointsArr.length-2; i++){\r\n            currObjArr = this.pushTwoCircles(circlesPointsArr[i], circlesPointsArr[i+1], currObjArr)\r\n        }\r\n        let bottomPointsArr = this.makeCirclesArrays(maxPoints, radius, true);\r\n        bottomPointsArr[0] = circlesPointsArr[0]\r\n        for(let i = 0; i < bottomPointsArr.length-2; i++){\r\n            currObjArr = this.pushBottomCircles(bottomPointsArr[i], bottomPointsArr[i+1], currObjArr)\r\n        }\r\n        let geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(currObjArr), 3));\r\n        geometry.computeVertexNormals();\r\n        return geometry\r\n    }\r\n\r\n\r\n    // https://threejs.org/docs/index.html#api/en/core/BufferGeometry.groups\r\n    // https://dustinpfister.github.io/2021/04/22/threejs-buffer-geometry/\r\n    makeInstance(scene: THREE.Scene): THREE.Mesh {\r\n        const shape = new THREE.Mesh(this.geometry, this.material);\r\n        return this.shapeObj\r\n    }\r\n\r\n\r\n    updateBoxHelper() : void {\r\n        if(this.shapeObj.userData.boxHelpers == true){\r\n            this.boxHelper.update()\r\n        }\r\n        this.boxGeo.setFromObject(this.shapeObj, true)\r\n    }\r\n\r\n    makeBoxGeo() : THREE.Box3 {\r\n        let tempBox = new THREE.Box3();\r\n        tempBox.setFromObject(this.shapeObj);\r\n        return tempBox\r\n    }\r\n\r\n    // todo here reference bool box helper to make or not\r\n    changeBoxHelperCol(checkBool: boolean) : void {\r\n        if(this.shapeObj.userData.boxHelpers == true){\r\n            this.boxHelper.material.dispose()\r\n            this.boxHelper.geometry.dispose()\r\n            this.boxHelper = this.makeBoxHelper(checkBool)\r\n        }\r\n        this.boxGeo = this.makeBoxGeo();\r\n    }\r\n\r\n    deleteAsteroid(){\r\n        if(this.shapeObj.userData.boxHelpers == true){\r\n            this.boxHelper.material.dispose()\r\n            this.boxHelper.geometry.dispose()\r\n            this.boxHelper.removeFromParent()\r\n        }\r\n        this.shapeObj.geometry.dispose()\r\n        this.shapeObj.removeFromParent()\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBoxHelper(checkBool: boolean) : THREE.BoxHelper{\r\n        let colChoice = RandomShapeClass.blueColor\r\n        if(checkBool == true){\r\n             colChoice = RandomShapeClass.redColor\r\n        }\r\n        return new THREE.BoxHelper(this.shapeObj, colChoice)\r\n    }\r\n\r\n    updatePushOnBump(other:RandomShapeClass) {\r\n        let otherTemp = new THREE.Vector3(this.shapeObj.position.x - other.shapeObj.position.x,\r\n                                          this.shapeObj.position.y - other.shapeObj.position.y,\r\n                                          this.shapeObj.position.z - other.shapeObj.position.z,\r\n                                          )\r\n        this.pushDir.add(otherTemp.multiplyScalar(1))\r\n        otherTemp.multiplyScalar(-1)\r\n        other.pushDir.add(otherTemp)\r\n    }\r\n\r\n    checkOtherConflict(other:RandomShapeClass):boolean{\r\n        let boxCheck = this.boxGeo.intersectsBox(other.boxGeo)\r\n        // todo movement push: make other function not called here?\r\n        if(boxCheck == true){\r\n            this.updatePushOnBump(other)\r\n        }\r\n        return boxCheck\r\n    }\r\n\r\n    checkPointConflict(point:THREE.Vector3):boolean{\r\n        return this.boxGeo.containsPoint(point)\r\n    }\r\n\r\n    setAsteroidDirection() {\r\n        // vector position one theta increment up\r\n        this.thetaNow += this.thetaDif\r\n        // direction: vector one thetadif rotation more around y axis; next position asteroid should be\r\n        this.direction.set(this.worldRadius * Math.cos(this.thetaNow), this.shapeObj.position.y, (this.worldRadius*.9)*Math.sin(this.thetaNow))\r\n//         // find difference between new position and current position; direction vector\r\n        this.direction.add(new THREE.Vector3().copy(this.shapeObj.position).multiplyScalar(-1))\r\n\r\n        // pushdir: the \"bounce\" between asteroids; only present if bounce happens\r\n        if(this.pushDir.length() > .01){\r\n            let newPushVec = new THREE.Vector3().copy(this.pushDir).multiplyScalar(.01)\r\n            this.direction.add(newPushVec)\r\n            this.pushDir.add(newPushVec.multiplyScalar(-1))\r\n        }\r\n\r\n        // direction: at this point, literally the vector with direction and magnitude equal to what should be pushed\r\n        this.shapeObj.position.add(this.direction)\r\n\r\n        if(this.directionBool == true){\r\n            this.updateRotationHelper(this.direction)\r\n            this.updateDirectionHelper(this.direction)\r\n        }\r\n    }\r\n\r\n    initRotationHelper() {\r\n        this.directionBool = true;\r\n        this.position = [this.shapeObj.position.x, this.shapeObj.position.y, this.shapeObj.position.z]\r\n//         const arrowLen = .5;\r\n        const arrowLen = this.radius * 2\r\n        const arrowCol = new THREE.Color('rgb(200, 0, 40)');\r\n        const arrowPos = new THREE.Vector3(this.position[0], this.position[1], this.position[2])\r\n        this.rotationHelper = new THREE.ArrowHelper(this.shapeObj.up, arrowPos, arrowLen, arrowCol)\r\n        return this.rotationHelper;\r\n    }\r\n    //https://threejs.org/docs/#api/en/core/BufferGeometry\r\n    //https://threejs.org/docs/#api/en/core/Object3D\r\n    //https://computergraphics.stackexchange.com/questions/10362/threejs-updating-an-objects-matrix-doesnt-change-its-position-and-rotation-pa\r\n    updateRotationHelper(transVec: THREE.Vector3) {\r\n        this.rotationHelper.setRotationFromEuler(this.shapeObj.rotation)\r\n        this.rotationHelper.position.add(transVec)\r\n        this.rotationHelper.position.setComponent(1, this.shapeObj.position.y)\r\n    }\r\n\r\n    initDirectionHelper() {\r\n        this.directionBool = true;\r\n        this.position = [this.shapeObj.position.x, this.shapeObj.position.y, this.shapeObj.position.z]\r\n//         const arrowLen = .5;\r\n        const arrowLen = this.radius*2\r\n        const arrowCol = new THREE.Color('rgb(0, 200, 40)');\r\n        const arrowPos = new THREE.Vector3(this.position[0], this.position[1], this.position[2])\r\n        this.directionHelper = new THREE.ArrowHelper(this.direction, arrowPos, arrowLen, arrowCol)\r\n        return this.directionHelper;\r\n    }\r\n\r\n    updateDirectionHelper(transVec: THREE.Vector3) {\r\n        const dirCopy = new THREE.Vector3()\r\n        dirCopy.copy(this.direction).normalize()\r\n        this.directionHelper.setDirection(dirCopy)\r\n        this.directionHelper.position.add(transVec)\r\n    }\r\n\r\n    setWorldRadius(newRad: number){\r\n        this.worldRadius = newRad\r\n    }\r\n\r\n    getWorldRadius() {\r\n        return this.worldRadius\r\n    }\r\n\r\n    setPushDir(numList: number[]) {\r\n        this.pushDir.x = numList[0]\r\n        this.pushDir.y = numList[1]\r\n        this.pushDir.z = numList[2]\r\n    }\r\n\r\n    getPushDir() : THREE.Vector3 {\r\n        return this.pushDir\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as THREE from 'three';\r\nimport { environment } from '../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostGameHelperService {\r\n\r\n    constructor() { }\r\n\r\n    public postGameRouter(scene: THREE.Scene, timestamp:number, builderService: any, scoreboardService:any, fontService: any){\r\n        if(environment.gameStopTime == 0){\r\n            environment.gameStopTime = timestamp\r\n        }\r\n        // timesUp mode\r\n        if(environment.postGameMode == environment.modeName1){\r\n            this.timesUpLogic(scene, fontService)\r\n        }\r\n\r\n        if(timestamp - environment.gameStopTime > 2000){\r\n            if(environment.postGameMode == environment.modeName2){\r\n                this.displayKeyboardLogic(scene, fontService)\r\n            }\r\n            if(environment.postGameMode == environment.modeName3){\r\n                this.nameInputLogic(scene, fontService, builderService)\r\n            }\r\n\r\n            if(environment.postGameMode == environment.modeName4){\r\n                this.postScoreLogic(scene, builderService, fontService, scoreboardService, timestamp)\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private timesUpLogic(scene: THREE.Scene, fontService: any){\r\n        let timerGroupObj = scene.getObjectByName(environment.timeWordGroupName)\r\n        if(timerGroupObj != undefined){\r\n            fontService.addFont(\"Time's up!!\", scene, environment.timeWordGroupName, environment.timerGroupPos, environment.largeFontSize)\r\n        }\r\n        // Entry mode\r\n        environment.postGameMode = environment.modeName2\r\n    }\r\n\r\n    private displayKeyboardLogic(scene: THREE.Scene, fontService:any){\r\n        let timerGroupObj = scene.getObjectByName(environment.timeWordGroupName)\r\n        if(timerGroupObj != undefined){\r\n            timerGroupObj.children.forEach((child:any, i:number)=>{\r\n                child.userData.deleteText()\r\n                environment.gameStopTime = -1\r\n            })\r\n            // todo logic add enter name group\r\n            fontService.addFont(environment.nameEntryString, scene, environment.timeWordGroupName, environment.timerGroupPos, environment.largeFontSize)\r\n            // create keyboard\r\n            let maxChars = Math.floor(environment.keysAlphabet.length/4)\r\n            let curX = environment.buttonGroupPos.x + (maxChars*.25*environment.buttonGroupPos.x)\r\n            let curY = environment.buttonGroupPos.y\r\n\r\n            // todo new logic add play again button\r\n            // todo new logic using env var not \"PLAY AGAIN\" hardcode\r\n            fontService.addFont(environment.playAgainString, scene, environment.buttonGroupName, new THREE.Vector3(environment.timerGroupPos.x - environment.smallFontSize*7, environment.timerGroupPos.y + environment.smallFontSize*2, environment.buttonGroupPos.z*.85), environment.xSmallFontSize*.80)\r\n\r\n            environment.keysAlphabet.forEach((characterVal:string, index:any) => {\r\n                if(index > 0 && index % maxChars == 0){\r\n                    curX = environment.buttonGroupPos.x + (maxChars*.25*environment.buttonGroupPos.x)\r\n                    curY -= environment.xSmallFontSize * 2.5\r\n                }\r\n                fontService.addFont(characterVal, scene, environment.buttonGroupName, new THREE.Vector3(environment.buttonGroupPos.x+curX, environment.buttonGroupPos.y+curY, environment.buttonGroupPos.z), environment.xSmallFontSize)\r\n                curX += environment.xSmallFontSize * 2.5\r\n\r\n            })\r\n            // todo new enter button logic\r\n            curY -= environment.xSmallFontSize * 2.5\r\n            curX/=2\r\n            // todo new logic user env var not \"ENTER\" hardcode\r\n            fontService.addFont(environment.enterString, scene, environment.buttonGroupName, new THREE.Vector3(environment.buttonGroupPos.x+curX, environment.buttonGroupPos.y+curY, environment.buttonGroupPos.z), environment.xSmallFontSize)\r\n            fontService.addFont(environment.deleteString, scene, environment.buttonGroupName, new THREE.Vector3(environment.buttonGroupPos.x-curX, environment.buttonGroupPos.y+curY, environment.buttonGroupPos.z), environment.xSmallFontSize)\r\n\r\n            // mode 3 scoreboard\r\n            environment.postGameMode = environment.modeName3\r\n        }\r\n    }\r\n\r\n    private nameInputLogic(scene: THREE.Scene, fontService: any, builderService: any){\r\n        // todo new logic check keyboard collide\r\n        builderService.checkLaserKeyboardCollisions(scene)\r\n        //\r\n        let timerGroupObj = scene.getObjectByName(environment.timeWordGroupName)\r\n        if(timerGroupObj != undefined){\r\n            // todo logic only refresh these if necessary\r\n            timerGroupObj.children.forEach((child:any, i:number)=>{\r\n                // todo new logic check if message beginning == NAME:\r\n                if(child.userData.message != undefined && child.userData.message.substr(0, 5) == environment.nameEntryString.substr(0, 5) && child.userData.message.slice(6, child.userData.message.length) != environment.currWordEntry){\r\n                    if(child.userData.deleteText != undefined){\r\n                        child.userData.deleteText()\r\n                    }\r\n                    // @ts-ignore\r\n    //                                 timerGroupObj.children.splice(i, 1)\r\n                    fontService.addFont(environment.nameEntryString + environment.currWordEntry, scene, environment.timeWordGroupName, environment.timerGroupPos, environment.largeFontSize)\r\n                    return\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        //\r\n\r\n    }\r\n\r\n    private postScoreLogic(scene:THREE.Scene, builderService:any, fontService:any, scoreboardService:any, timestamp: number){\r\n        let buttonGroup = scene.getObjectByName(environment.buttonGroupName)\r\n        if(buttonGroup != undefined && buttonGroup.children.length!=0 && environment.scoreboardObject[0] != 2){\r\n            buttonGroup.children.forEach( (child:any, i:number) => {\r\n                if(child.userData.deleteText != undefined){\r\n                    child.userData.deleteText()\r\n                }\r\n            })\r\n            // todo make new function for get scoreboard api\r\n        }\r\n        // todo here temporary logic might not want to use this method of first element scoreboard\r\n        // todo also added logic make sure button group cleared before switching, weird bug with empty name enter causing O and N keys to remain\r\n        //@ts-ignore\r\n        if(environment.scoreboardObject[0] == -1 && buttonGroup.children.length == 0){\r\n            // post score and set scoreboard object [0] -2\r\n            this.scoreBoardPostLogic(scoreboardService)\r\n        }else if(environment.scoreboardObject[0] == -2){\r\n            // get scoreboard, which sets scoreboard object [0] 1\r\n            this.getScoreBoardLogic(scene, scoreboardService)\r\n        }else if(environment.scoreboardObject[0] == 1){\r\n            // ensure that all old text is deleted prepare for showing high scores, then set scoreboard object [0] 2\r\n            this.deleteOldTextLogic(scene)\r\n        // todo new logic\r\n        // block after here: scoreboard object 0 == 2, displaying scoreboard\r\n        }else if(environment.scoreboardObject[0] == 2){\r\n            // update high scores based on timestamp, looping through, also watch for play again to set scoreboard object [0] 3\r\n            this.displayAndUpdateScores(scene, builderService, fontService, timestamp)\r\n        }else if (environment.scoreboardObject[0] == 3){\r\n            this.refreshPagePlayAgain()\r\n        }\r\n\r\n    }\r\n\r\n    private scoreBoardPostLogic(scoreboardService:any){\r\n        // posting score\r\n        scoreboardService.postScoreHelper(environment.currWordEntry, environment.userScore)\r\n        environment.scoreboardObject = [-2]\r\n    }\r\n\r\n    private getScoreBoardLogic(scene:THREE.Scene, scoreboardService:any){\r\n        // getting scoreboard\r\n        scoreboardService.getScoreBoardHelper()\r\n        let timerGroupObj = scene.getObjectByName(environment.timeWordGroupName)\r\n        if(timerGroupObj != undefined){\r\n            timerGroupObj.children.forEach((child:any, i:number)=>{\r\n                if(child.userData.deleteText != undefined){\r\n                    child.userData.deleteText()\r\n                }\r\n            })\r\n        }\r\n        let scoreGroup = scene.getObjectByName(environment.scoreGroupName)\r\n        if(scoreGroup != undefined){\r\n            scoreGroup.children.forEach((child:any, i:number) => {\r\n                if(child.userData.deleteText != undefined){\r\n                    child.userData.deleteText()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    private deleteOldTextLogic(scene: THREE.Scene){\r\n        // this: scoreboard object [0] == 1, displaying scoreboard\r\n        let timerGroupObj = scene.getObjectByName(environment.timeWordGroupName)\r\n        if(timerGroupObj != undefined){\r\n            if(timerGroupObj.children.length != 0){\r\n                timerGroupObj.children.forEach((child:any, i:number)=>{\r\n                    if(child.userData.deleteText != undefined){\r\n                        child.userData.deleteText()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        // todo new logic only put in high score if length 0\r\n        //@ts-ignore\r\n        if(timerGroupObj.children.length == 0){\r\n            environment.scoreboardObject[0] = 2\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private displayAndUpdateScores(scene:THREE.Scene, builderService:any, fontService:any, timestamp:number){\r\n        if(environment.timeStampDisplay == -1){\r\n            // - 2000 to display faster\r\n            environment.timeStampDisplay = timestamp - 2500\r\n            // todo add msg \"HIGH SCORES\" using environment var not hard code\r\n            fontService.addFont(environment.highScoresString, scene, environment.timeWordGroupName, environment.timerGroupPos, environment.largeFontSize)\r\n            // todo add msg \"PLAY AGAIN\" using environment var not hard code\r\n            fontService.addFont(environment.playAgainString, scene, environment.buttonGroupName, new THREE.Vector3(environment.timerGroupPos.x - environment.smallFontSize*7, environment.timerGroupPos.y + environment.smallFontSize*2, environment.buttonGroupPos.z*.85), environment.xSmallFontSize*.80)\r\n        }\r\n\r\n    //                         let scoresList = environment.scoreboardObject[1]\r\n        //@ts-ignore\r\n        if(environment.scoreStartIndex < environment.scoreboardObject[1].length && timestamp - environment.timeStampDisplay > 3000){\r\n            let timerGroupObj = scene.getObjectByName(environment.timeWordGroupName)\r\n            if(timerGroupObj != undefined){\r\n                if(timerGroupObj.children.length != 0){\r\n                    timerGroupObj.children.forEach((child:any, i:number)=>{\r\n                        // todo new logic avoid high score string update\r\n                        if(child.userData.deleteText != undefined && child.userData.message != environment.highScoresString){\r\n                            child.userData.deleteText()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n            // todo new logic only put in high score if length 0\r\n            //@ts-ignore\r\n            // todo add msg \"HIGH SCORES\" using environment var not hard code\r\n            let curY = environment.timerGroupPos.y\r\n            curY -= environment.largeFontSize*2\r\n            let scoresList = environment.scoreboardObject[1]\r\n            // todo new logic try to avoid not deleting, cant check if == 0 because high scores object with 2 objects in children list\r\n            //@ts-ignore\r\n            if(timerGroupObj.children.length <= 2){\r\n                //@ts-ignore\r\n                scoresList.slice(environment.scoreStartIndex, environment.scoreStartIndex+environment.scoreSliceAmt).forEach((scoreInfo: Array<any>, i:number) => {\r\n                    const nameVal = scoreInfo[1]\r\n                    const scoreVal = scoreInfo[2]\r\n                    // todo new logic incorporate score start index\r\n                    const scoreMsg = String(i+1+environment.scoreStartIndex) + \" \" + nameVal + \":    \" + scoreVal\r\n                    curY -= environment.smallFontSize * 2\r\n                    fontService.addFont(scoreMsg, scene, environment.timeWordGroupName, new THREE.Vector3(environment.timerGroupPos.x, environment.timerGroupPos.y+curY, environment.timerGroupPos.z), environment.smallFontSize)\r\n                })\r\n                // new logic time of displaying last scores\r\n                environment.timeStampDisplay = timestamp\r\n                // new logic update scoreStartIndex\r\n                environment.scoreStartIndex += environment.scoreSliceAmt\r\n                // @ts-ignore\r\n                if(environment.scoreStartIndex >= environment.scoreboardObject[1].length){\r\n                    //\r\n                    environment.scoreStartIndex = 0\r\n                }\r\n            }\r\n\r\n        }\r\n        builderService.checkLaserKeyboardCollisions(scene)\r\n\r\n\r\n    }\r\n\r\n    public refreshPagePlayAgain() : void{\r\n       window.location.reload()\r\n       // must set scoreboard object to avoid looping and reloading multiple times\r\n       environment.scoreboardObject[0] = 4\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ScoreboardHelperService {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  private getScoreBoard(){\r\n//     return this.httpClient.get('http://localhost:5000/scoreboard_api/get_scoreboard', {\r\n    return this.httpClient.get(environment.scoreboard_get_url, {\r\n    //     return this.httpClient.get('http://localhost:8081/pickle-api', {\r\n        withCredentials: true,\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'charset': 'UTF-8'\r\n        })\r\n    });\r\n  }\r\n\r\n  public getScoreBoardHelper(){\r\n//     https://stackoverflow.com/a/49605311/10432596\r\n    this.getScoreBoard().subscribe(data => {\r\n        let scoreBoardGet = JSON.parse(JSON.stringify(data))\r\n        environment.scoreboardObject = [1, scoreBoardGet]\r\n    })\r\n  }\r\n\r\n  private postScore(name: String, score: number){\r\n//     return this.httpClient.post('http://localhost:5000/scoreboard_api/post_score', {\r\n//     //     return this.httpClient.get('http://localhost:8081/pickle-api', {\r\n//         withCredentials: true,\r\n//         nameVal: name,\r\n//         scoreVal: score,\r\n//         headers: new HttpHeaders({\r\n//             'Content-Type': 'application/json',\r\n//             'charset': 'UTF-8'\r\n//         })\r\n//     });\r\n//     return this.httpClient.post('http://localhost:5000/scoreboard_api/post_score', {\r\n    return this.httpClient.post(environment.scoreboard_post_url, {\r\n    //     return this.httpClient.get('http://localhost:8081/pickle-api', {\r\n        nameVal: name,\r\n        scoreVal: score\r\n    });\r\n  }\r\n\r\n  public postScoreHelper(name: String, score:number){\r\n    this.postScore(name, score).subscribe(data => {\r\n//         console.log(\"data\")\r\n//         console.log(data)\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'threejs-ng-snake';\n}\n","<head>\n  <style>\n    body {\n      background: url('https://thumbnails.yayimages.com/1600/0/d99/d9945c.jpg') no-repeat center center fixed;\n      -webkit-background-size: cover;\n      -moz-background-size: cover;\n      background-size: cover;\n      -o-background-size: cover;\n    }\n\n  </style>\n</head>\n\n\n<body class=\"border\" style=\"height: 100vh; max-width: 100vw;\">\n  <div class=\"row border mx-auto mb-5 p-1\" style=\"max-width: inherit; background-color: rgba(229,157,126,0.63)\">\n    <h1 class=\"font-monospace fw-bolder\">ThreeJS/Angular/Flask Test Page</h1>\n  </div>\n  <div class=\"row border mx-auto p-1\" style=\"max-width: inherit; background-color: rgba(229,157,126,0.63); min-height: 80%\">\n\n    <div class=\"col mx-auto p-1\" style=\"max-width: inherit\">\n\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</body>\n","/*\r\n* ADAPTION THREEJS FIRST PERSON CONTROLS\r\n*/\r\n\r\nimport {\r\n\tMathUtils,\r\n\tSpherical,\r\n\tVector3\r\n} from 'three';\r\n\r\nconst _lookDirection = new Vector3();\r\nconst _spherical = new Spherical();\r\nconst _target = new Vector3();\r\n\r\nclass TurretControls {\r\n\r\n\tconstructor( object, domElement ) {\r\n\r\n\t\tif ( domElement === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.TurretControls: The second parameter \"domElement\" is now mandatory.' );\r\n\t\t\tdomElement = document;\r\n\r\n\t\t}\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.domElement = domElement;\r\n\r\n\t\t// API\r\n\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.lookSpeed = 0.005;\r\n\r\n\t\tthis.lookVertical = true;\r\n\r\n\t\tthis.activeLook = true;\r\n\r\n\t\tthis.heightSpeed = false;\r\n\t\tthis.heightCoef = 1.0;\r\n\t\tthis.heightMin = 0.0;\r\n\t\tthis.heightMax = 1.0;\r\n\r\n        // todo here constrain vertical: only really used look ratio... remove and make own var?\r\n\t\tthis.constrainVertical = false;\r\n\t\tthis.verticalMin = 0;\r\n\t\tthis.verticalMax = Math.PI;\r\n\r\n\t\tthis.mouseDragOn = false;\r\n        // todo here preAddCopy, targetCopy only used helper\r\n        this.CameraHelpers = false;\r\n\t\tthis.targetCopy = new Vector3()\r\n\t\tthis.preAddCopy = new Vector3()\r\n\r\n\t\t// internals\r\n\r\n\t\tthis.autoSpeedFactor = 0.0;\r\n\r\n\t\tthis.mouseX = 0;\r\n\t\tthis.mouseY = 0;\r\n\r\n\t\tthis.viewHalfX = 0;\r\n\t\tthis.viewHalfY = 0;\r\n\r\n\t\t// private variables\r\n\r\n\t\tlet lat = 0;\r\n\t\tlet lon = 0;\r\n\r\n\t\t//\r\n\r\n\t\tthis.handleResize = function () {\r\n\r\n\t\t\tif ( this.domElement === document ) {\r\n\r\n\t\t\t\tthis.viewHalfX = window.innerWidth / 2;\r\n\t\t\t\tthis.viewHalfY = window.innerHeight / 2;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.viewHalfX = this.domElement.offsetWidth / 2;\r\n\t\t\t\tthis.viewHalfY = this.domElement.offsetHeight / 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\r\n\t\tthis.onMouseMove = function ( event ) {\r\n\r\n\t\t\tif ( this.domElement === document ) {\r\n\r\n\t\t\t\tthis.mouseX = event.pageX - this.viewHalfX;\r\n\t\t\t\tthis.mouseY = event.pageY - this.viewHalfY;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.mouseX = event.pageX - this.domElement.offsetLeft - this.viewHalfX;\r\n\t\t\t\tthis.mouseY = event.pageY - this.domElement.offsetTop - this.viewHalfY;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.onMouseLeave = function ( event ) {\r\n\t\t    // todo need to see usage of this, likely unneeded else if\r\n\t\t    if ( this.domElement === document) {\r\n\t\t        this.enabled = false\r\n\t\t    }else{\r\n\t\t        this.enabled = false\r\n\r\n\t\t    }\r\n\t\t}\r\n\r\n\t\tthis.onMouseEnter = function( event ) {\r\n\t\t    if ( this.domElement === document ) {\r\n\t\t        this.enabled = true\r\n\t\t    }else{\r\n\t\t        this.enabled = true\r\n\t\t    }\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis.lookAt = function ( x, y, z ) {\r\n\r\n\t\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\t\t_target.copy( x );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_target.set( x, y, z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.object.lookAt( _target );\r\n\r\n\t\t\tsetOrientation( this );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t\tthis.update = function () {\r\n\r\n\t\t\tconst targetPosition = new Vector3();\r\n\r\n\t\t\treturn function update( delta ) {\r\n\r\n\t\t\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t\t\tif ( this.heightSpeed ) {\r\n\r\n\t\t\t\t\tconst y = MathUtils.clamp( this.object.position.y, this.heightMin, this.heightMax );\r\n\t\t\t\t\tconst heightDelta = y - this.heightMin;\r\n\r\n\t\t\t\t\tthis.autoSpeedFactor = delta * ( heightDelta * this.heightCoef );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.autoSpeedFactor = 0.0;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tlet actualLookSpeed = delta * this.lookSpeed;\r\n\r\n\t\t\t\tif ( ! this.activeLook ) {\r\n\r\n\t\t\t\t\tactualLookSpeed = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet verticalLookRatio = 1;\r\n\r\n\t\t\t\tif ( this.constrainVertical ) {\r\n\r\n\t\t\t\t\tverticalLookRatio = Math.PI / ( this.verticalMax - this.verticalMin );\r\n\r\n\t\t\t\t}\r\n                // todo here new change with ratio for lon added\r\n                lon -= this.mouseX * actualLookSpeed;\r\n//\t\t\t\tlon -= this.mouseX * actualLookSpeed * verticalLookRatio;\r\n\t\t\t\tif ( this.lookVertical ) lat -= this.mouseY * actualLookSpeed * verticalLookRatio;\r\n\r\n                // todo here should make new variables for max movement any dir\r\n\t\t\t\tlat = Math.max( - 35, Math.min( 25, lat ) );\r\n\r\n\t\t\t\tlet phi = MathUtils.degToRad( 90 - lat );\r\n\r\n                // todo new lon logic... angle from z+ axis?\r\n\t\t\t\tlon = Math.max(130, Math.min(235, lon))\r\n\t\t\t\tconst theta = MathUtils.degToRad( lon );\r\n\r\n                // todo here: removed logic for this constrain vertical; maybe just make look ratio own variable?\r\n//\t\t\t\tif ( this.constrainVertical ) {\r\n////\t\t\t\t\tphi = MathUtils.mapLinear( phi, 0, Math.PI, this.verticalMin, this.verticalMax );\r\n//\t\t\t\t}\r\n\r\n\t\t\t\tconst position = this.object.position;\r\n\t\t\t\t// todo here preAddCopy only used helper\r\n\t\t\t\tif(this.CameraHelpers == true){\r\n                    this.preAddCopy.setFromSphericalCoords( 1, phi, theta )\r\n                }\r\n\t\t\t\ttargetPosition.setFromSphericalCoords( 1, phi, theta ).add( position );\r\n\r\n\t\t\t\tthis.object.lookAt( targetPosition );\r\n//\t\t\t\t// todo here targetCopy only used helper\r\n                if(this.CameraHelpers == true){\r\n\t\t\t\t    this.targetCopy.copy(targetPosition)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn targetPosition;\r\n\r\n\r\n\t\t\t};\r\n\r\n\t\t}();\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu );\r\n\t\t\tthis.domElement.removeEventListener( 'mousemove', _onMouseMove );\r\n            this.domElement.removeEventListener( 'mouseleave',  _onMouseLeave)\r\n            this.domElement.removeEventListener( 'mouseenter', _onMouseEnter )\r\n\r\n\t\t};\r\n\r\n\t\tconst _onMouseMove = this.onMouseMove.bind( this );\r\n\t\tconst _onMouseLeave = this.onMouseLeave.bind( this );\r\n\t\tconst _onMouseEnter = this.onMouseEnter.bind( this );\r\n\r\n\r\n\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu );\r\n\t\tthis.domElement.addEventListener( 'mousemove', _onMouseMove );\r\n\t\tthis.domElement.addEventListener( 'mouseleave', _onMouseLeave )\r\n\t\tthis.domElement.addEventListener( 'mouseenter', _onMouseEnter )\r\n\r\n\r\n\t\tfunction setOrientation( controls ) {\r\n\r\n\t\t\tconst quaternion = controls.object.quaternion;\r\n\r\n\t\t\t_lookDirection.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\t\t_spherical.setFromVector3( _lookDirection );\r\n\r\n\t\t\tlat = 90 - MathUtils.radToDeg( _spherical.phi );\r\n\t\t\tlon = MathUtils.radToDeg( _spherical.theta );\r\n\r\n\t\t}\r\n\r\n\t\tthis.handleResize();\r\n\r\n\t\tsetOrientation( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction contextmenu( event ) {\r\n\r\n\tevent.preventDefault();\r\n\r\n}\r\n\r\nexport { TurretControls };\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CanvasCompComponent } from './canvas-comp/canvas-comp.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CanvasCompComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// https://stackoverflow.com/questions/53341497/flask-session-not-persisting-between-requests-for-angular-app\r\n\r\nexport class WordApiService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getWord(){\r\n      return this.httpClient.get('http://localhost:5000/pickle-api', {\r\n//     return this.httpClient.get('http://localhost:8081/pickle-api', {\r\n          withCredentials: true,\r\n          headers: new HttpHeaders({\r\n              'Content-Type': 'application/json',\r\n              'charset': 'UTF-8'\r\n          })\r\n      });\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n// todo new logic refresh\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { FontLoader } from 'three/src/loaders/FontLoader';\r\nimport { WordApiService } from '../word-api.service';\r\n// import { FormBuilder } from '@angular/forms'\r\nimport { ObjBuilderService } from '../services/obj-builder.service'\r\nimport { SceneHelperService } from '../services/scene-helper.service'\r\nimport { FontBuilderService } from '../services/font-builder.service'\r\nimport { ScoreboardHelperService } from '../services/scoreboard-helper.service'\r\nimport { PostGameHelperService } from '../services/post-game-helper.service'\r\n\r\nimport { Stats } from '../js/stats'\r\n\r\nimport { environment } from '../environments/environment'\r\n\r\n@Component({\r\n    selector: 'app-canvas-comp',\r\n    templateUrl: './canvas-comp.component.html',\r\n    styles: [\r\n    ]\r\n})\r\n\r\n\r\nexport class CanvasCompComponent implements OnInit {\r\n    public word_form: any;\r\n    public scene: THREE.Scene;\r\n    public shapesArray: any = []\r\n    public camera: THREE.PerspectiveCamera;\r\n    public renderer: any;\r\n    public start: any;\r\n//     public last: any;\r\n    public controls: any;\r\n    public wordGet: any;\r\n    // THREE.AxesHelper\r\n    public axesHelper: any;\r\n    // THREE.GridHelper\r\n    public gridHelper: any;\r\n\r\n    public clock: THREE.Clock;\r\n\r\n    public controlArrow: any;\r\n    public posArrow: any;\r\n    public oldArrow: any;\r\n    public addArrow: any;\r\n    //fps helper\r\n    public stats: any;\r\n\r\n    // todo here all arrows: just helpers\r\n    private cameraHelpers: boolean = false;\r\n    // helper bool box helpers render material\r\n    private boxHelpers: boolean = false;\r\n    // helper bool for rotation and direction helper arrows\r\n    private directionHelpers: boolean = false;\r\n    //\r\n    private axesHelperBool: boolean = false;\r\n    private gridHelperBool: boolean = false;\r\n    //\r\n    private lightDirHelper: boolean = false;\r\n\r\n    private laserTest: boolean = false;\r\n\r\n    // todo timer\r\n    private lastSecondStart = 0\r\n    private timerElapsed = 0\r\n    private timerMax = 46\r\n    private userScorePrev = -1\r\n\r\n    // todo new logic rotation timing\r\n    private lastRotationStart = 0\r\n\r\n    // todo new logic refresh timing\r\n    private lastKeyRefresh = 0\r\n\r\n    // todo new logic game stop time\r\n//     private gameStopTime = 0\r\n\r\n    //\r\n//     private sceneService: any = undefined;\r\n\r\n    constructor(private wordService: WordApiService,\r\n                private builderService: ObjBuilderService,\r\n                private sceneService: SceneHelperService,\r\n                private fontService: FontBuilderService,\r\n                private scoreboardService: ScoreboardHelperService,\r\n                private postGameHelper: PostGameHelperService,\r\n                ) {\r\n\r\n        this.scene = new THREE.Scene();\r\n\r\n        // HELPERS:\r\n        const axesSize = 10\r\n        const centerColor = new THREE.Color('rgb(0, 0, 255)')\r\n        if(this.axesHelperBool == true){\r\n            this.axesHelper = new THREE.AxesHelper(axesSize)\r\n            const zColor = new THREE.Color('rgb(0, 50, 100)')\r\n            this.axesHelper.setColors(centerColor, zColor, centerColor)\r\n            this.scene.add(this.axesHelper)\r\n        }\r\n        if(this.gridHelperBool == true){\r\n            this.gridHelper = new THREE.GridHelper(axesSize, axesSize, centerColor);\r\n            this.scene.add(this.gridHelper)\r\n        }\r\n\r\n        // MAIN CAMERA\r\n        this.camera = new THREE.PerspectiveCamera(60, 800 / 600);\r\n        // START: USED FOR TIMING\r\n        this.start = -1;\r\n        // INITIALIZE LIGHTS AND FOG\r\n        this.sceneService.initLights(this.scene, this.lightDirHelper)\r\n        this.sceneService.initFog(this.scene)\r\n\r\n        // INITIAL TEXT AND BUTTON OBJECTS\r\n        // title group\r\n        this.sceneService.initSceneGroup(this.scene, environment.wordGroupName)\r\n        this.fontService.addFont(environment.titleString, this.scene, environment.wordGroupName, environment.wordGroupPos, environment.largeFontSize)\r\n        // timer group\r\n        this.sceneService.initSceneGroup(this.scene, environment.timeWordGroupName)\r\n        // score group\r\n        this.sceneService.initSceneGroup(this.scene, environment.scoreGroupName)\r\n        // start button\r\n        this.sceneService.initSceneGroup(this.scene, environment.buttonGroupName)\r\n        this.fontService.addFont(environment.startString, this.scene, environment.buttonGroupName, environment.buttonGroupPos, environment.xSmallFontSize)\r\n\r\n        // CLOCK OBJECT FOR DELTA\r\n        this.clock = new THREE.Clock()\r\n\r\n        // necessary to enable \"this\" keyword to work correctly inside animate\r\n        this.animate = this.animate.bind(this);\r\n    }\r\n\r\n\r\n    // @ts-ignore\r\n    animate(timestamp): FrameRequestCallback {\r\n        // INITIALIZE TIME OBJECTS IN ANIMATION LOOP\r\n        // start object: used to calculate elapsed time\r\n        if (this.start === -1){\r\n            this.start = timestamp;\r\n            this.lastSecondStart = timestamp\r\n            this.lastRotationStart = timestamp\r\n            this.lastKeyRefresh = timestamp\r\n//             this.last = timestamp;\r\n        }\r\n        const elapsed = timestamp - this.start;\r\n        const delta = this.clock.getDelta()\r\n\r\n        // controls update: necessary for damping orbit controls\r\n        // note: controls target, useful\r\n        let controlsTarget = this.controls.update(delta)\r\n\r\n        // logic for updating controls reticule, target is a sprite\r\n        if(controlsTarget != undefined){\r\n            this.sceneService.updateReticuleSprite(this.scene, this.camera, controlsTarget)\r\n        }\r\n\r\n\r\n        // logic for timer, game going on, only update timer every second\r\n        if((elapsed-this.lastSecondStart) > 950 && environment.postGameMode == \"\"){\r\n            let timerGroupObj = this.scene.getObjectByName(environment.timeWordGroupName)\r\n            if(timerGroupObj != undefined){\r\n                if(environment.gameStart == true){\r\n                    this.timerElapsed += 1\r\n                    timerGroupObj.children.forEach((child:any, i:number) => {\r\n                        if(child.userData.deleteText != undefined){\r\n                            child.userData.deleteText()\r\n                        }\r\n                    })\r\n                    timerGroupObj.children = []\r\n                    if(this.timerMax-this.timerElapsed != 0){\r\n                        this.fontService.addFont(String(this.timerMax-this.timerElapsed), this.scene, environment.timeWordGroupName, environment.timerGroupPos, environment.largeFontSize)\r\n                    }\r\n                    this.lastSecondStart = timestamp\r\n                }\r\n                if(this.timerMax - this.timerElapsed <= 0 && environment.gameStart == true){\r\n                    environment.gameStart = false\r\n                    environment.postGameMode = environment.modeName1\r\n                    timerGroupObj.children.forEach((child:any) => {\r\n                        child.userData.deleteText()\r\n                    })\r\n                    timerGroupObj.children = []\r\n                    this.timerElapsed+=1\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        // todo new logic exclude game mode 3 gameplay else refresh\r\n        if(environment.postGameMode != environment.modeName2 && (timestamp-this.lastKeyRefresh) > environment.keyRefreshRate){\r\n            this.lastKeyRefresh = timestamp\r\n            // todo new logic refresh button color\r\n            let buttonGroup = this.scene.getObjectByName(environment.buttonGroupName)\r\n            if(buttonGroup != undefined){\r\n                buttonGroup.children.forEach( (child:any) => {\r\n                    if(child.userData.refreshTextWireframe != undefined){\r\n                        child.userData.refreshTextWireframe()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        let scoreGroup = this.scene.getObjectByName(environment.scoreGroupName)\r\n        if(scoreGroup != undefined && this.userScorePrev != environment.userScore && environment.gameStart == true){\r\n            this.userScorePrev = environment.userScore\r\n            scoreGroup.children.forEach((child:any, i:number) => {\r\n                if(child.userData.deleteText != undefined){\r\n                    child.userData.deleteText()\r\n                }\r\n            })\r\n            scoreGroup.children = []\r\n            this.fontService.addFont(String(environment.userScore), this.scene, environment.scoreGroupName, environment.scoreGroupPos, environment.largeFontSize)\r\n        }\r\n\r\n        // logic arrow helpers\r\n        if(this.cameraHelpers == true){\r\n            let [cA, pA, oA, aA] = this.sceneService.updateCameraHelpers(this.scene, this.controls, this.controlArrow, this.posArrow, this.oldArrow, this.addArrow)\r\n            this.controlArrow = cA;\r\n            this.posArrow = pA;\r\n            this.oldArrow = oA;\r\n            this.addArrow = aA;\r\n        }\r\n\r\n        // main logic asteroids\r\n        if(timestamp-this.lastRotationStart > environment.rotationFramerate){\r\n            this.lastRotationStart = timestamp\r\n            // spin each asteroid and rotate around center y axis\r\n            this.shapesArray.forEach((asteroid:any, index:any) => {\r\n                // todo new logic here using asteroid user data spin, now set using min and max vars for radius and spin\r\n                asteroid.shapeObj.rotateY(asteroid.shapeObj.userData.spin)\r\n                asteroid.shapeObj.rotateZ(asteroid.shapeObj.userData.spin/5)\r\n                // set asteroid direction, also update rotation helper if necessary\r\n                asteroid.setAsteroidDirection()\r\n                // update box helper, or box helper won't change in size with rotation etc\r\n                asteroid.updateBoxHelper()\r\n\r\n                this.builderService.checkConflicts(asteroid, this.shapesArray, index, this.scene, this.boxHelpers)\r\n\r\n            });\r\n        }\r\n\r\n        if(environment.postGameMode != \"\"){\r\n            this.postGameHelper.postGameRouter(this.scene, timestamp, this.builderService, this.scoreboardService, this.fontService)\r\n        }\r\n\r\n        // update laser: init new, set depleted, check max distance and delete\r\n        this.sceneService.updateLaser(this.scene, controlsTarget)\r\n        this.builderService.checkLaserCollisions(this.shapesArray, this.scene, this.boxHelpers);\r\n        this.render_all();\r\n        this.stats.update();\r\n        requestAnimationFrame(this.animate);\r\n    }\r\n\r\n    window_set_size(): void {\r\n        //https://r105.threejsfundamentals.org/threejs/lessons/threejs-responsive.html\r\n        const pixelRatio = window.devicePixelRatio;\r\n//         // @ts-ignore\r\n//         const HEIGHT = document.getElementById('mainCanvas').clientHeight * pixelRatio;\r\n//         // @ts-ignore\r\n//         const WIDTH = document.getElementById('mainCanvas').clientWidth * pixelRatio;\r\n        const HEIGHT = window.innerHeight*.8\r\n        const WIDTH = window.innerWidth*.9\r\n        this.renderer.setSize(WIDTH, HEIGHT);\r\n        this.camera.aspect = WIDTH / HEIGHT;\r\n        this.camera.updateProjectionMatrix();\r\n        this.controls.handleResize()\r\n    }\r\n\r\n    window_size_listener(): void {\r\n        window.addEventListener('resize', () => {\r\n            this.window_set_size();\r\n        });\r\n    }\r\n\r\n    render_all(): void {\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n\r\n\r\n    ngOnInit(): void {\r\n        let canvas = document.querySelector('canvas.draw') as HTMLCanvasElement\r\n        this.renderer = new THREE.WebGLRenderer({\r\n            antialias: true,\r\n            logarithmicDepthBuffer: false,\r\n            canvas: canvas\r\n\r\n        });\r\n\r\n        this.renderer.shadowMap.enabled = true\r\n        // @ts-ignore\r\n        this.renderer.setClearColor(this.scene.fog.color)\r\n        //https://stackoverflow.com/questions/15409321/super-sample-antialiasing-with-threejs\r\n        //https://r105.threejsfundamentals.org/threejs/lessons/threejs-responsive.html\r\n        // set pixel ratio not recommended\r\n//         this.renderer.setPixelRatio(window.devicePixelRatio*1.25)\r\n\r\n        this.sceneService.initCameras(this.scene, this.camera)\r\n\r\n        this.sceneService.initStars(this.scene, this.camera.position)\r\n\r\n        this.controls = this.sceneService.initControls(this.scene, this.camera)\r\n\r\n        this.sceneService.initReticuleSprite(this.scene, this.camera, this.controls)\r\n\r\n        // todo new logic grouping lasers\r\n        // todo new logic renaming this and using generalized name\r\n//         this.sceneService.initLaserGroup(this.scene)\r\n        this.sceneService.initSceneGroup(this.scene, environment.laserGroupName)\r\n\r\n        // main logic\r\n        this.window_set_size();\r\n        this.window_size_listener();\r\n\r\n        // todo : logic init asteroids, don't need to pass in anything but scene after using scene group logic\r\n        this.builderService.initBoxes(this.shapesArray, this.scene, this.boxHelpers, this.directionHelpers)\r\n\r\n        // arrow helper logic\r\n        if(this.cameraHelpers == true){\r\n            this.controls.cameraHelpers = true;\r\n            let [cA, pA, oA, aA]  = this.sceneService.initCameraHelpers(this.scene, this.controls, this.controlArrow, this.posArrow, this.oldArrow, this.addArrow)\r\n            this.controlArrow = cA;\r\n            this.posArrow = pA;\r\n            this.oldArrow = oA;\r\n            this.addArrow = aA;\r\n        }\r\n\r\n        //fps helper logic\r\n        // https://subscription.packtpub.com/book/web-development/9781783981182/1/ch01lvl1sec15/determining-the-frame-rate-for-your-scene\r\n        {\r\n            // @ts-ignore\r\n            this.stats = new Stats();\r\n            this.stats.setMode(0);\r\n            this.stats.domElement.style.position = 'absolute';\r\n            this.stats.domElement.style.left = '5vh';\r\n            this.stats.domElement.style.top = \"80vh\";\r\n            document.body.appendChild( this.stats.domElement );\r\n\r\n        }\r\n\r\n        /* Mouse clicking handling */\r\n        canvas.addEventListener('click', (evt) => this.sceneService.updateClickedTrue(this.scene))\r\n\r\n        requestAnimationFrame(this.animate);\r\n  }\r\n\r\n}\r\n\r\n\r\n","\r\n<!--<canvas class=\"draw\" id=\"mainCanvas\" style=\"max-width: inherit; min-width: 100%; height: inherit\"></canvas>-->\r\n<div class=\"col mx-auto\" style=\"max-width: 100%; height: 100%; background-color: inherit\">\r\n  <canvas class=\"draw row mx-auto\" id=\"mainCanvas\" style=\"max-width: inherit; height: inherit; cursor: none\"></canvas>\r\n\r\n</div>\r\n\r\n<!--<canvas class=\"draw\" id=\"mainCanvas\" style=\"max-width: inherit; height: inherit\"></canvas>-->\r\n<!--<form class=\"col-8 mx-auto form-group\" [formGroup]=\"wordForm\" (ngSubmit)=\"sendWord()\">-->\r\n<!--    <div class=\"form-group row\">-->\r\n<!--        <label for=\"word_in\" class=\"col-form-label\">-->\r\n<!--            <h4>Enter Word</h4>-->\r\n<!--        </label>-->\r\n<!--        <div class=\"col-sm-8\">-->\r\n<!--            <input id=\"word_in\" type=\"text\" placeholder=\"word\" class=\"form-control shadow\" formControlName=\"word_in\">-->\r\n<!--        </div>-->\r\n<!--    </div>-->\r\n\r\n<!--    <div class=\"form-group row\">-->\r\n<!--        <div class=\"col-sm-10 offset-sm-8\">-->\r\n<!--            <button type=\"submit\" class=\"btn btn-primary shadow\" [disabled]=\"!commentForm.valid\">Post-->\r\n<!--                Comment</button>-->\r\n<!--        </div>-->\r\n<!--    </div>-->\r\n<!--</form>-->\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styles: [\n  ]\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <h1>Not found ya dingus</h1>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { FirstPersonControls } from 'three/examples/jsm/controls/FirstPersonControls';\r\nimport { TurretControls } from '../js/TurretControls'\r\nimport { LaserRay } from '../classes/laser-ray'\r\nimport * as THREE from 'three';\r\n\r\nimport { environment } from '../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SceneHelperService {\r\n    private targetAxes: any;\r\n    private checked: boolean;\r\n    public clicked: boolean;\r\n\r\n    constructor() {\r\n        this.checked = false\r\n        this.targetAxes = undefined\r\n        this.clicked = false\r\n     }\r\n\r\n    private generateStarPosition(min_rad:number): THREE.Vector3 {\r\n        let vertAngle = THREE.MathUtils.degToRad(THREE.MathUtils.mapLinear(Math.random(), 0, 1, 0, 360.0))\r\n        let horzAngle = THREE.MathUtils.degToRad(THREE.MathUtils.mapLinear(Math.random(), 0, 1, 0, 360.0))\r\n        let ranVec = new THREE.Vector3(Math.cos(vertAngle)*Math.cos(horzAngle), Math.sin(vertAngle), Math.sin(horzAngle)*Math.cos(vertAngle))\r\n        ranVec.normalize()\r\n        ranVec.setLength(min_rad+Math.random()*min_rad)\r\n        ranVec.setLength(THREE.MathUtils.mapLinear(Math.random(), 0, 1, min_rad, min_rad*1.5))\r\n        return ranVec\r\n    }\r\n\r\n    public initStars(scene:THREE.Scene, camera_position:THREE.Vector3) : void {\r\n        const verts = []\r\n        const sizes = []\r\n        const num_stars = 10000\r\n        const min_pos_radius = camera_position.length()\r\n        const starSprite = new THREE.TextureLoader().load('assets/disc.png');\r\n\r\n        const min_star_size = .002\r\n        const max_star_size = .01\r\n        for(let i = 0; i<num_stars; i++){\r\n            let temp_vec = this.generateStarPosition(min_pos_radius)\r\n            verts.push(temp_vec.x, temp_vec.y, temp_vec.z)\r\n            let star_size = THREE.MathUtils.mapLinear(Math.random(), 0, 1, min_star_size, max_star_size)\r\n            // modifier: goal: closer stars are smaller size\r\n            let temp_dist_modifier = (temp_vec.distanceTo(camera_position)/min_pos_radius)**2\r\n            sizes.push(star_size*temp_dist_modifier)\r\n//             sizes.push(star_size)\r\n        }\r\n        const geo = new THREE.BufferGeometry();\r\n        geo.setAttribute('position', new THREE.Float32BufferAttribute(verts, 3));\r\n//         geo.setAttribute('size', new THREE.Float32BufferAttribute( [.2], 1))\r\n        geo.setAttribute('size', new THREE.Float32BufferAttribute( sizes, 1))\r\n//         const material = new THREE.PointsMaterial({color: new THREE.Color('rgb(255, 255, 255)')})\r\n        const material = new THREE.PointsMaterial({size: .1, map:starSprite, transparent: true, alphaTest: .2})\r\n        const points = new THREE.Points(geo, material)\r\n        scene.add(points)\r\n\r\n\r\n    }\r\n\r\n    public initLights(scene:THREE.Scene, dirHelperBool:boolean) : void {\r\n        // light\r\n        {\r\n            const colorAmb = new THREE.Color('rgb(204,243,251)');\r\n            const intensity = .5;\r\n            const ambLight = new THREE.AmbientLight(colorAmb, intensity);\r\n            scene.add(ambLight);\r\n            //           this.scene.add(ambLight);\r\n        }\r\n\r\n        // light 2\r\n        // todo make class variables or add names?\r\n        {\r\n//             const colorDir = new THREE.Color('rgb(255,200,255)');\r\n            const colorDir = new THREE.Color('rgb(243,233,155)');\r\n            const intensityDir = .8;\r\n            const lightDir = new THREE.DirectionalLight(colorDir, intensityDir);\r\n            lightDir.position.set(3, 2, 3);\r\n            lightDir.target.position.set(0, 0, 0);\r\n            scene.add(lightDir);\r\n            //           this.scene.add(lightDir);\r\n            if(dirHelperBool == true){\r\n                const lightDirHelper = new THREE.DirectionalLightHelper(lightDir)\r\n                scene.add(lightDirHelper);\r\n            }\r\n            //           this.scene.add(lightDirHelper);\r\n        }\r\n    }\r\n\r\n    public initFog(scene:THREE.Scene) : void {\r\n        // fog\r\n        {\r\n            const color = new THREE.Color('rgb(34,32,50)')\r\n            const near = 1;\r\n//             const far = 21;\r\n            const far = 16;\r\n            scene.fog = new THREE.Fog(color, near, far);\r\n            scene.background = color;\r\n        }\r\n    }\r\n\r\n    public initCameras(scene:THREE.Scene, camera:THREE.PerspectiveCamera): void {\r\n//         camera.position.z = 8;\r\n// //         camera.position.z = 5;\r\n//         camera.position.x = 0;\r\n//         camera.position.y = 1.2;\r\n        // todo use new environmental variable for this\r\n        camera.position.x = environment.cameraPos.x;\r\n        camera.position.y = environment.cameraPos.y;\r\n        camera.position.z = environment.cameraPos.z;\r\n        camera.name = \"turretCamera\"\r\n        scene.add(camera);\r\n    }\r\n\r\n    public initControls(scene:THREE.Scene, camera:THREE.PerspectiveCamera): TurretControls{\r\n        const domElement = document.querySelector('canvas.draw') as HTMLCanvasElement;\r\n        //         https://en.threejs-university.com/2021/09/16/easily-moving-the-three-js-camera-with-orbitcontrols-and-mapcontrols/\r\n        //         https://threejs.org/docs/#examples/en/controls/OrbitControls\r\n        //first person controls and configuration\r\n//         let controls = new TurretControls(camera, domElement)\r\n        let controls = new TurretControls(camera, document)\r\n        controls.lookSpeed =.35\r\n        controls.constrainVertical = true;\r\n        controls.verticalMin = 1*Math.PI/8\r\n//         controls.verticalMin = 1\r\n        controls.verticalMax = 7*Math.PI/8\r\n//         controls.verticalMax = 3.14\r\n        return controls\r\n\r\n    }\r\n\r\n    public initCameraHelpers(scene:THREE.Scene, controls:TurretControls, controlArrow:THREE.ArrowHelper, posArrow:THREE.ArrowHelper, oldArrow: THREE.ArrowHelper, addArrow:THREE.ArrowHelper) : THREE.ArrowHelper[] {\r\n        // helper arrow target\r\n        const origin = new THREE.Vector3(-1,0,0)\r\n        const length = controls.targetCopy.length()\r\n        controlArrow = new THREE.ArrowHelper(controls.targetCopy.normalize(), origin, length, new THREE.Color('rgb(150, 0,0)'))\r\n        scene.add(controlArrow)\r\n        // helper arrow position controls\r\n        let posCopy = new THREE.Vector3(0,0,0)\r\n        posCopy.copy(controls.object.position)\r\n        posCopy.normalize()\r\n\r\n        posArrow = new THREE.ArrowHelper(\r\n                                posCopy,\r\n                                origin,\r\n                                controls.object.position.length(),\r\n                                new THREE.Color('rgb(0, 100, 150)'))\r\n        scene.add(posArrow)\r\n        let oldLength = controls.preAddCopy.length()\r\n        let preAddCache = new THREE.Vector3()\r\n        preAddCache.copy(controls.preAddCopy)\r\n        oldArrow = new THREE.ArrowHelper(controls.preAddCopy.normalize(), origin, oldLength, new THREE.Color('rgb(0, 240,0)'))\r\n        scene.add(oldArrow)\r\n        let addPos = new THREE.Vector3()\r\n        addPos.copy(posCopy).add(preAddCache)\r\n        let addLength = addPos.length()\r\n        addArrow = new THREE.ArrowHelper(\r\n                                addPos.normalize(),\r\n                                new THREE.Vector3(preAddCache.x, preAddCache.y, preAddCache.z),\r\n                                addLength,\r\n                                new THREE.Color('rgb(100, 100, 100)')\r\n\r\n        )\r\n        scene.add(addArrow)\r\n        return [controlArrow, posArrow, oldArrow, addArrow]\r\n    }\r\n\r\n    public updateCameraHelpers(scene:THREE.Scene, controls:TurretControls, controlArrow:THREE.ArrowHelper, posArrow:THREE.ArrowHelper, oldArrow: THREE.ArrowHelper, addArrow:THREE.ArrowHelper) : THREE.ArrowHelper[] {\r\n        // todo helpers below: all arrows only ... could be added separate function\r\n        // todo new helper logic\r\n\r\n        controlArrow.setLength(controls.targetCopy.length(),\r\n                                    // @ts-ignore\r\n                                    controlArrow.headLength,\r\n                                    .15)\r\n        controlArrow.setDirection(controls.targetCopy.normalize())\r\n        // todo below: just calculation using angle target vector and Y axis\r\n        let Yval = controls.targetCopy.y\r\n        let radTheta = Math.acos(Yval/controls.targetCopy.length())\r\n        let thetaY = THREE.MathUtils.radToDeg(radTheta)\r\n\r\n        let addPos = new THREE.Vector3()\r\n        addPos.copy(controls.object.position)\r\n        scene.remove(addArrow)\r\n        let addLength = addPos.length()\r\n        addArrow = new THREE.ArrowHelper(\r\n                                addPos.normalize(),\r\n                                new THREE.Vector3(controls.preAddCopy.x-1, controls.preAddCopy.y, controls.preAddCopy.z),\r\n                                addLength,\r\n                                new THREE.Color('rgb(100, 100, 100)')\r\n\r\n        )\r\n        addArrow.setLength(addLength)\r\n        scene.add(addArrow)\r\n\r\n        oldArrow.setLength(controls.preAddCopy.length(),\r\n                                // @ts-ignore\r\n                                controls.preAddCopy.headLength,\r\n                                .15)\r\n        oldArrow.setDirection(controls.preAddCopy.normalize())\r\n        let posCopy = new THREE.Vector3(0,0,0)\r\n        posCopy.copy(controls.object.position)\r\n        posCopy.normalize()\r\n\r\n        posArrow.setLength(controls.object.position.length()*.95,\r\n                                // @ts-ignore\r\n                                posArrow.headLength,\r\n                                .08\r\n        )\r\n        posArrow.setDirection(posCopy)\r\n        return [controlArrow, posArrow, oldArrow, addArrow]\r\n    }\r\n\r\n//     public initReticuleSprite(scene:THREE.Scene, camera:THREE.PerspectiveCamera){\r\n    public initReticuleSprite(scene:THREE.Scene, camera:THREE.PerspectiveCamera, controls:any){\r\n        const sprite_uri = \".\\\\assets\\\\reticule_small_lens_color.png\"\r\n        let sprite_map = new THREE.TextureLoader().load(sprite_uri)\r\n        let material = new THREE.SpriteMaterial({map: sprite_map,\r\n                                                color: 0xffffff,\r\n                                                transparent: true,\r\n                                                opacity: .7\r\n                                                })\r\n        let reticule_sprite = new THREE.Sprite(material)\r\n        reticule_sprite.scale.set(.075, .075, 1)\r\n//         reticule_sprite.scale.set(.1, .1, 1)\r\n\r\n        reticule_sprite.position.copy(camera.position)\r\n        reticule_sprite.lookAt(camera.position)\r\n        reticule_sprite.translateZ(-1)\r\n\r\n        reticule_sprite.name = \"reticule\"\r\n        scene.add(reticule_sprite)\r\n    }\r\n\r\n    public updateReticuleSprite(scene:THREE.Scene, camera:THREE.PerspectiveCamera, targetPosition:any) {\r\n        let reticule_sprite : any = scene.getObjectByName('reticule')\r\n        reticule_sprite.position.copy(camera.position)\r\n        reticule_sprite.lookAt(camera.position)\r\n        let targetAxes = new THREE.Vector3().copy(targetPosition).sub(camera.position)\r\n//         reticule_sprite.translateOnAxis(targetAxes, 1)\r\n        reticule_sprite.translateOnAxis(targetAxes, .25)\r\n        reticule_sprite.setRotationFromEuler(camera.rotation)\r\n\r\n\r\n    }\r\n\r\n    public updateClickedTrue(scene: THREE.Scene){\r\n        if(this.checked == true && this.clicked == false){\r\n            // todo new logic check if charged before setting clicked true\r\n            if(LaserRay.checkIfCharged() == true){\r\n                this.clicked = true\r\n            }\r\n//             let laser:any = scene.getObjectByName(\"blueLaser\")\r\n//             laser.visible = true\r\n        }\r\n    }\r\n\r\n    // todo new logic: generalize group creation\r\n//     public initLaserGroup(scene:THREE.Scene){\r\n    public initSceneGroup(scene:THREE.Scene, name:string){\r\n        let laserGroup = new THREE.Group()\r\n//         laserGroup.name = \"laserGroup\"\r\n        laserGroup.name = name\r\n        scene.add(laserGroup)\r\n    }\r\n\r\n//     public initLaser(scene:THREE.Scene){\r\n    // todo new logic add target when creating laser to add to user data in mesh\r\n    public initLaser(scene:THREE.Scene, targetAxes:THREE.Vector3){\r\n        let camera = scene.getObjectByName(\"turretCamera\")\r\n        let blueLaser = new LaserRay(camera, targetAxes)\r\n        // todo new logic use environment variable for laser group\r\n//         let laserGroup = scene.getObjectByName(\"laserGroup\")\r\n        let laserGroup = scene.getObjectByName(environment.laserGroupName)\r\n        if(laserGroup!=undefined){\r\n            laserGroup.add(blueLaser.laserSprite)\r\n        }\r\n    }\r\n\r\n    public updateLaser(scene:THREE.Scene, controlsTarget:any){\r\n        let camera = scene.getObjectByName(\"turretCamera\")\r\n        if(camera != undefined && controlsTarget != undefined){\r\n            // todo break this into new function inside laser?\r\n            if(this.checked == false){\r\n                this.checked = true\r\n            }\r\n//             if(this.checked == true && this.clicked == true){\r\n            // todo new logic game start\r\n//             if(this.checked == true && this.clicked == true && environment.gameStart == true){\r\n            if(this.checked == true && this.clicked == true){\r\n                let targetAxes = new THREE.Vector3().copy(controlsTarget).sub(camera.position).normalize()\r\n                // create laser and add to group\r\n                this.initLaser(scene, targetAxes)\r\n                // set clicked to false TODO add cooldown\r\n                this.clicked = false\r\n                // todo new logic: set laser depleted\r\n                LaserRay.setDepleted()\r\n            }\r\n\r\n        }\r\n        // todo new logic use environment variable for group name\r\n        let laserGroup = scene.getObjectByName(environment.laserGroupName)\r\n        if(laserGroup != undefined){\r\n            if(camera != undefined){\r\n                const maxLaserDist = camera.position.length() * 1.2\r\n                laserGroup.children.forEach( (blueLaser, index) => {\r\n                    blueLaser.userData.updateLaserPosition()\r\n                    // calculate laser distance and compare to camera, remove laser after travel distance is camera\r\n                    //  position length or longer\r\n                    if(blueLaser.userData.getLaserTravelDistance(camera) >= maxLaserDist){\r\n                        blueLaser.userData.deleteLaser()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar Stats = function () {\r\n\r\n\tvar mode = 0;\r\n\r\n\tvar container = document.createElement( 'div' );\r\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\r\n\tcontainer.addEventListener( 'click', function ( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tshowPanel( ++ mode % container.children.length );\r\n\r\n\t}, false );\r\n\r\n\t//\r\n\r\n\tfunction addPanel( panel ) {\r\n\r\n\t\tcontainer.appendChild( panel.dom );\r\n\t\treturn panel;\r\n\r\n\t}\r\n\r\n\tfunction showPanel( id ) {\r\n\r\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\r\n\r\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\r\n\r\n\t\t}\r\n\r\n\t\tmode = id;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\r\n\r\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\r\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\r\n\r\n\tif ( self.performance && self.performance.memory ) {\r\n\r\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\r\n\r\n\t}\r\n\r\n\tshowPanel( 0 );\r\n\r\n\treturn {\r\n\r\n\t\tREVISION: 16,\r\n\r\n\t\tdom: container,\r\n\r\n\t\taddPanel: addPanel,\r\n\t\tshowPanel: showPanel,\r\n\r\n\t\tbegin: function () {\r\n\r\n\t\t\tbeginTime = ( performance || Date ).now();\r\n\r\n\t\t},\r\n\r\n\t\tend: function () {\r\n\r\n\t\t\tframes ++;\r\n\r\n\t\t\tvar time = ( performance || Date ).now();\r\n\r\n\t\t\tmsPanel.update( time - beginTime, 200 );\r\n\r\n\t\t\tif ( time >= prevTime + 1000 ) {\r\n\r\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\r\n\r\n\t\t\t\tprevTime = time;\r\n\t\t\t\tframes = 0;\r\n\r\n\t\t\t\tif ( memPanel ) {\r\n\r\n\t\t\t\t\tvar memory = performance.memory;\r\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn time;\r\n\r\n\t\t},\r\n\r\n\t\tupdate: function () {\r\n\r\n\t\t\tbeginTime = this.end();\r\n\r\n\t\t},\r\n\r\n\t\t// Backwards Compatibility\r\n\r\n\t\tdomElement: container,\r\n\t\tsetMode: showPanel\r\n\r\n\t};\r\n\r\n};\r\n\r\nStats.Panel = function ( name, fg, bg ) {\r\n\r\n\tvar min = Infinity, max = 0, round = Math.round;\r\n\tvar PR = round( window.devicePixelRatio || 1 );\r\n\r\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\r\n\t\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\r\n\t\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\r\n\t\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\r\n\r\n\tvar canvas = document.createElement( 'canvas' );\r\n\tcanvas.width = WIDTH;\r\n\tcanvas.height = HEIGHT;\r\n\tcanvas.style.cssText = 'width:80px;height:48px';\r\n\r\n\tvar context = canvas.getContext( '2d' );\r\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\r\n\tcontext.textBaseline = 'top';\r\n\r\n\tcontext.fillStyle = bg;\r\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\r\n\r\n\tcontext.fillStyle = fg;\r\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\r\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\r\n\r\n\tcontext.fillStyle = bg;\r\n\tcontext.globalAlpha = 0.9;\r\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\r\n\r\n\treturn {\r\n\r\n\t\tdom: canvas,\r\n\r\n\t\tupdate: function ( value, maxValue ) {\r\n\r\n\t\t\tmin = Math.min( min, value );\r\n\t\t\tmax = Math.max( max, value );\r\n\r\n\t\t\tcontext.fillStyle = bg;\r\n\t\t\tcontext.globalAlpha = 1;\r\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\r\n\t\t\tcontext.fillStyle = fg;\r\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\r\n\r\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\r\n\r\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\r\n\r\n\t\t\tcontext.fillStyle = bg;\r\n\t\t\tcontext.globalAlpha = 0.9;\r\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nexport { Stats };\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CanvasCompComponent } from './canvas-comp/canvas-comp.component'\nimport { NotFoundComponent } from './not-found/not-found.component'\n\nconst routes: Routes = [\n  {path: '', component: CanvasCompComponent, pathMatch: 'full'},\n  {path: '**', component: NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Vector3 } from \"three\"\r\n\r\ninterface scoreObject {\r\n    status: String,\r\n    scoreDict: Array<any>\r\n}\r\n\r\nexport const environment = {\r\n    // production: built in to environment threejs\r\n    production: false,\r\n    // gamestart: determine to display timer\r\n\r\n    gameStart: false,\r\n\r\n\r\n    // fonts for words\r\n    fontUri: '..\\\\assets\\\\helvetiker_regular.typeface.json',\r\n    // wordtest group: demo name on top, asteroid demo title\r\n    wordGroupName: \"wordTestGroup\",\r\n    wordGroupPos: new Vector3(-2,2,0),\r\n    // timer word object\r\n    timeWordGroupName: \"timerGroup\",\r\n    timerGroupPos: new Vector3(-.25,.5,0),\r\n    // user score for asteroids\r\n    userScore: 0,\r\n    scoreGroupName: \"wordScoreGroup\",\r\n    scoreGroupPos: new Vector3(-.25,1.4,0),\r\n    // laser group\r\n    laserGroupName: \"laserGroup\",\r\n    keyRefreshRate: 200,\r\n    // todo new logic button group with fonts\r\n    buttonGroupName: \"buttonGroup\",\r\n    //     buttonGroupPos: new Vector3(-.25, .25, 5),\r\n    // todo new logic moving keys closer and smaller\r\n    buttonGroupPos: new Vector3(-.25, .35, 6),\r\n\r\n    // post_game_mode : avoid if statements using environment\r\n    // Undefined, TimesUp, Entry, Scoreboard\r\n    postGameMode: \"\",\r\n    modeName1: \"TimesUp\",\r\n    modeName2: \"EntryStart\",\r\n    modeName3: \"NameEntrykeyboard\",\r\n    modeName4: \"Scoreboard\",\r\n\r\n    // todo new logic word alphabet for keyboard\r\n    keysAlphabet: (String.fromCharCode(...Array(123).keys()).slice(65, 91) + String.fromCharCode(...Array(123).keys()).slice(48, 58)).split(''),\r\n\r\n    // todo new logic big and small font size\r\n    largeFontSize: .4,\r\n    smallFontSize: .2,\r\n    xSmallFontSize: .1,\r\n\r\n    // todo new logic currWord\r\n    currWordEntry: \"\",\r\n    maxEntryLength: 8,\r\n    scoreboardObject: [-1, undefined],\r\n    // todo new logic limit number of high scores displayed\r\n    scoreStartIndex: 0,\r\n    scoreSliceAmt: 10,\r\n    timeStampDisplay: -1,\r\n\r\n    // todo new logic avoid hardcoding strings\r\n    titleString: \"Asteroids 3D\",\r\n    nameEntryString: \"NAME: \",\r\n    highScoresString: \"HIGH SCORES\",\r\n    playAgainString: \"PLAY AGAIN\",\r\n    startString: \"START\",\r\n    enterString: \"ENTER\",\r\n    deleteString: \"DEL\",\r\n\r\n    // asteroid global params\r\n    min_asteroid_radius: .02,\r\n    max_asteroid_radius: .3,\r\n    asteroid_distance_modifier: .35,\r\n    // rotation on own axis\r\n    min_asteroid_spin: .006,\r\n    max_asteroid_spin: .02,\r\n    max_asteroids: 100,\r\n\r\n    // todo testing this, limit rotation speed if faster system\r\n    // higher values slow asteroids\r\n    rotationFramerate: 5,\r\n\r\n    // todo new logic camera pos\r\n    cameraPos: new Vector3(0, 1.2, 8),\r\n\r\n    // todo new logic move post-game vars here\r\n    gameStopTime: 0,\r\n    // scoreboard service\r\n    scoreboard_post_url: 'http://localhost:5000/scoreboard_api/post_score',\r\n    scoreboard_get_url: 'http://localhost:5000/scoreboard_api/get_scoreboard'\r\n\r\n\r\n}\r\n\r\n//         const fontUri = '..\\\\assets\\\\Gravity_Bold.json'\r\n","import { Injectable } from '@angular/core';\r\nimport * as THREE from 'three';\r\nimport { RandomShapeClass } from '../classes/random-shape-class.model'\r\nimport { environment } from '../environments/environment'\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ObjBuilderService {\r\n\r\n    constructor() { }\r\n\r\n    // todo here take boxhelpers as param\r\n    public initBoxes(shapesArray: any, scene:THREE.Scene, boxHelpers:boolean, directionHelpers:boolean): void {\r\n        for(let i = 0; i<environment.max_asteroids; i++){\r\n\r\n\r\n            // blueCol/greenCol: change color of asteroid based on position in list of all asteroids\r\n            //  the higher the index, the more intense the color\r\n            // todo new logic enviro var\r\n            const blueCol = 255 - Math.floor(THREE.MathUtils.mapLinear(i, 0, environment.max_asteroids, 20, 60))\r\n            const greenCol = 215 -Math.floor(THREE.MathUtils.mapLinear(i, 0, environment.max_asteroids, 20, 100));\r\n            const redCol = 140 - Math.floor(THREE.MathUtils.mapLinear(i, 0, environment.max_asteroids, 20, 30));\r\n            let material = new THREE.MeshPhongMaterial({\r\n                                     color: new THREE.Color('rgb('+redCol+','+greenCol+','+blueCol+')'),\r\n//                                      side: THREE.DoubleSide\r\n                                    side: THREE.FrontSide\r\n                              })\r\n            // todo new logic using environment var for radius\r\n            let box_rad = THREE.MathUtils.mapLinear(i, 0, environment.max_asteroids, environment.min_asteroid_radius, environment.max_asteroid_radius)\r\n            // todo new logic use environment var for max radius\r\n//             let pos = this.generatePosition(environment.max_asteroid_radius)\r\n            let pos = this.generatePosition(environment.asteroid_distance_modifier)\r\n            // use this to change complexity of asteroids; higher values -> more triangles\r\n\r\n            const minPointsBound = 9;\r\n            const maxPointsBound = 15;\r\n            // todo new logic enviro var\r\n            const maxPoints = Math.floor(THREE.MathUtils.mapLinear(i, 0, environment.max_asteroids, minPointsBound, maxPointsBound))\r\n//             let newShape = new RandomShapeClass(material, box_rad, pos, maxPoints)\r\n            let newShape = new RandomShapeClass(material, box_rad, pos, maxPoints, boxHelpers)\r\n\r\n            // todo shapesArray will be gotten rid of\r\n            shapesArray.push(newShape)\r\n            // todo we want to add to group not scene\r\n            scene.add(newShape.shapeObj)\r\n            if(boxHelpers == true){\r\n                scene.add(newShape.boxHelper)\r\n            }\r\n\r\n            // todo why adding to scene before checking conflicts\r\n            let conflictCheck = this.checkConflicts(newShape, shapesArray, i, scene, boxHelpers)\r\n            // if conflict found in initial placing of asteroid, loop through all asteroids\r\n            // to find a new position free of collisions\r\n            while(conflictCheck == true){\r\n                // each time, increase radius before generating position to reduce conflict likelihood\r\n                // todo new logic use environment var\r\n                let new_diam = environment.max_asteroid_radius * 1.1\r\n\r\n                let new_pos = this.generatePosition(new_diam)\r\n                // todo translate geometry: could be helper function inside shape taking pos as input\r\n\r\n                // todo here same as constructor, edit\r\n                let posVec = new THREE.Vector3(newShape.position[0], newShape.position[1], newShape.position[2])\r\n                let posLength = posVec.length();\r\n\r\n                newShape.shapeObj.translateOnAxis(posVec.normalize(), posLength)\r\n                let newVec = new THREE.Vector3(new_pos[0], new_pos[1], new_pos[2])\r\n                let newLength = newVec.length();\r\n                newShape.shapeObj.translateOnAxis(newVec.normalize(), newLength)\r\n\r\n                scene.remove(newShape.boxHelper)\r\n                newShape.changeBoxHelperCol(false)\r\n                if(boxHelpers == true){\r\n                    scene.add(newShape.boxHelper)\r\n                }\r\n                newShape.initDirectionTheta()\r\n\r\n                conflictCheck = this.checkConflicts(newShape, shapesArray, i, scene, boxHelpers)\r\n            }\r\n            // todo change this with directionBool\r\n            if(directionHelpers){\r\n                scene.add(newShape.initRotationHelper());\r\n                scene.add(newShape.initDirectionHelper());\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public generatePosition(max_radius:number): number[] {\r\n        // todo make this based on distance to camera not size of radius\r\n        let min_bound = max_radius*17\r\n        let horzAngle = THREE.MathUtils.degToRad(Math.random()*360.0)\r\n        // new: constrain vertical angle to make an asteroid \"belt\" effect\r\n        let vertAngle = THREE.MathUtils.degToRad(Math.random()*30)\r\n        min_bound = min_bound*.9 + Math.random()*(min_bound*.1)\r\n        let horz_min_bound = min_bound * Math.cos(vertAngle)\r\n        let ranVec = new THREE.Vector3(horz_min_bound*Math.cos(horzAngle), min_bound*Math.sin(vertAngle), horz_min_bound*Math.sin(horzAngle))\r\n        let pos = [ranVec.x, ranVec.y, ranVec.z]\r\n        return pos\r\n\r\n    }\r\n\r\n    //https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_collision_detection\r\n    //https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_collision_detection/Bounding_volume_collision_detection_with_THREE.js\r\n    // todo move into asteroid class? or other helper class?\r\n    checkConflicts(asteroid: any, shapesArray: any[], index: number, scene: THREE.Scene, boxHelpers:boolean) : boolean {\r\n        let checkBool = false;\r\n        for(let j = 0; j<index; j++){\r\n            let other = shapesArray[j]\r\n            let thisBool = asteroid.checkOtherConflict(other)\r\n\r\n            if(thisBool){\r\n                asteroid.conflictHit = true;\r\n                other.conflictHit = true;\r\n                checkBool = true;\r\n                if(boxHelpers == true){\r\n                    scene.remove(asteroid.boxHelper)\r\n                    asteroid.changeBoxHelperCol(true)\r\n                    scene.add(asteroid.boxHelper)\r\n\r\n                    scene.remove(other.boxHelper)\r\n                    other.changeBoxHelperCol(true)\r\n                    scene.add(other.boxHelper)\r\n                }\r\n            }\r\n\r\n        }\r\n        if(checkBool == false){\r\n//             let tempGoodAstBool = asteroid.conflictHit\r\n            asteroid.conflictHit = false;\r\n            if(boxHelpers){\r\n                scene.remove(asteroid.boxHelper)\r\n                asteroid.changeBoxHelperCol(false)\r\n                scene.add(asteroid.boxHelper)\r\n            }\r\n        }\r\n        return checkBool\r\n    }\r\n\r\n    // todo new logic here check collisions\r\n    checkLaserCollisions(shapesArray: any[], scene: THREE.Scene, boxHelpers: boolean) : any {\r\n        // todo new logic use environment file\r\n//         let laserGroup = scene.getObjectByName(\"laserGroup\")\r\n        // todo new logic only hit this in start or mode name 2\r\n        if(environment.postGameMode == \"\"){\r\n            let laserGroup = scene.getObjectByName(environment.laserGroupName)\r\n            if(laserGroup != undefined){\r\n                // todo new logic button hits\r\n                let buttonGroup = scene.getObjectByName(environment.buttonGroupName)\r\n                laserGroup.children.forEach( (laser, index) => {\r\n                    if(environment.gameStart == true){\r\n                        for (let i = 0; i<shapesArray.length; i++){\r\n                            // @ts-ignore\r\n                            if(laser.geometry.boundingSphere != undefined){\r\n                                let hitCheck = shapesArray[i].checkPointConflict(laser.position)\r\n                                if(hitCheck == true){\r\n                                    // new logic: break asteroid into smaller chunks\r\n                                    this.blowUpAsteroid(shapesArray, i, scene, boxHelpers)\r\n                                    // delete asteroid removes from scene\r\n                                    shapesArray[i].deleteAsteroid()\r\n                                    // todo splice necessary here because splicing array, not children object\r\n                                    shapesArray.splice(i, 1)\r\n                                    i-=1\r\n\r\n                                    // new logic delete using laser function and splice group\r\n                                    laser.userData.deleteLaser()\r\n                                    // todo new logic: no splice, avoid error deleting all lasers on hit, remove parent delete\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n//                     if(buttonGroup != undefined && environment.postGameMode == \"\"){\r\n                    if(buttonGroup != undefined){\r\n                        buttonGroup.children.forEach( (child:any, i:number) => {\r\n                            if(child.userData.checkPointConflict != undefined){\r\n                                let retConf = child.userData.checkPointConflict(laser.position)\r\n                                if(retConf == true){\r\n                                    // todo use env var not \"START\" hardcode\r\n                                    if(child.userData.message == environment.startString){\r\n                                        environment.gameStart = true\r\n                                        child.userData.deleteText()\r\n\r\n                                        // @ts-ignore\r\n//                                             buttonGroup.children.splice(0, i)\r\n\r\n                                        laser.userData.deleteLaser()\r\n                                        // todo new logic: no splice, avoid error deleting all lasers on hit\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    checkLaserKeyboardCollisions(scene: THREE.Scene) :any {\r\n        let laserGroup = scene.getObjectByName(environment.laserGroupName)\r\n        let buttonGroup = scene.getObjectByName(environment.buttonGroupName)\r\n        if(laserGroup != undefined){\r\n            laserGroup.children.forEach( (laser, index) => {\r\n                if(buttonGroup != undefined){\r\n                    buttonGroup.children.forEach( (child:any, i:number) => {\r\n                        if(child.userData.checkPointConflict != undefined){\r\n                            let retConf = child.userData.checkPointConflict(laser.position)\r\n                            if(retConf == true){\r\n                                // todo new logic test for \"ENTER message\"\r\n                                if(child.userData.message == environment.enterString){\r\n                                    // after enter hit hit new environment\r\n                                    environment.postGameMode = environment.modeName4\r\n                                    return\r\n                                }else if(child.userData.message == environment.playAgainString){\r\n                                    // refresh page\r\n                                    environment.scoreboardObject[0] = 3\r\n                                    environment.postGameMode = environment.modeName4\r\n                                    return\r\n                                }else if(child.userData.message == environment.deleteString){\r\n                                    environment.currWordEntry = environment.currWordEntry.slice(0, environment.currWordEntry.length-1)\r\n                                    return\r\n                                }\r\n                                // logic if length current name over max then splice first char off\r\n                                if(environment.currWordEntry.length >= environment.maxEntryLength){\r\n                                    environment.currWordEntry = environment.currWordEntry.slice(1, environment.currWordEntry.length-1)\r\n                                }\r\n                                environment.currWordEntry += child.userData.message\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    blowUpAsteroid(shapesArray: any[], index: number, scene:THREE.Scene, boxHelpers: boolean) : any {\r\n        // get asteroid from array\r\n        let asteroid = shapesArray[index]\r\n\r\n        // todo new logic increment user score\r\n        environment.userScore += parseInt(asteroid.shapeObj.userData.points)\r\n\r\n        // set min and max number of asteroids generated by explosion\r\n        let min_new_asteroids = 3\r\n        let max_new_asteroids = 5\r\n        let num_new_asteroids = Math.floor(THREE.MathUtils.mapLinear(Math.random(), 0, 1, min_new_asteroids, max_new_asteroids))\r\n\r\n        // loop through and create number of asteroids between min and max\r\n        for(let i = 0; i < num_new_asteroids; i++){\r\n            // get old color, going to decrease red green and blue to make darker (because smaller)\r\n            let old_color = asteroid.material.color\r\n\r\n            // generate color using old values and decreasing\r\n            let new_color = new THREE.Color(\r\n                THREE.MathUtils.mapLinear(Math.random(), 0, 1, old_color.r*.95, old_color.r),\r\n                THREE.MathUtils.mapLinear(Math.random(), 0, 1, old_color.g*1.25, old_color.g),\r\n                THREE.MathUtils.mapLinear(Math.random(), 0, 1, old_color.b*1.4, old_color.b)\r\n            )\r\n\r\n            // generate material for new asteroid\r\n            let material = new THREE.MeshPhongMaterial({\r\n                color: new_color,\r\n                side: THREE.FrontSide\r\n            })\r\n\r\n            // create asteroid with smaller radius than previous, between .45 and .75 previous\r\n            // todo use min here to avoid Nan scores\r\n            let box_rad = THREE.MathUtils.mapLinear(i, 0, num_new_asteroids-1, asteroid.radius*.20, asteroid.radius*.40)\r\n            // todo new logic use environment asteroid size\r\n            if(box_rad >= environment.min_asteroid_radius){\r\n                // create new asteroid object\r\n//                 let new_asteroid_gen = new RandomShapeClass(material, box_rad, asteroid.position, asteroid.maxPoints-1)\r\n                // todo new logic boxHelpersBool for now pass false\r\n                let new_asteroid_gen = new RandomShapeClass(material, box_rad, asteroid.position, asteroid.maxPoints-1, boxHelpers)\r\n\r\n                // copy information on direction, current angle etc to line up with old position\r\n                new_asteroid_gen.thetaNow = asteroid.thetaNow\r\n                new_asteroid_gen.direction = asteroid.getDirection()\r\n\r\n                // create a new push direction with random values but based on old\r\n                new_asteroid_gen.setPushDir([\r\n                    THREE.MathUtils.mapLinear(Math.random(), 0, 1, -20, 30+asteroid.pushDir.x),\r\n                    THREE.MathUtils.mapLinear(Math.random(), 0, 1, -1, 1+asteroid.pushDir.y),\r\n                    THREE.MathUtils.mapLinear(Math.random(), 0, 1, -20, 30+asteroid.pushDir.z),\r\n                ])\r\n\r\n                // copy old position but also change position slightly to reduce overlap\r\n                new_asteroid_gen.shapeObj.position.copy(asteroid.shapeObj.position)\r\n                new_asteroid_gen.shapeObj.position.x += Math.random() * asteroid.radius\r\n                new_asteroid_gen.shapeObj.position.y += Math.random() * asteroid.radius\r\n                new_asteroid_gen.shapeObj.position.z += Math.random() * asteroid.radius\r\n\r\n                scene.add(new_asteroid_gen.shapeObj)\r\n                shapesArray.push(new_asteroid_gen)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}